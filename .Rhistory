filter(trial != "fam") %>%
select(condition, subid, sex, aged, correct, trial) %>%
mutate(z.trial = scale(as.numeric(trial)),
z.age = aged - mean(aged),
z.sex = scale(as.numeric(sex)))
rep.S2.bayes.data
ranef(S2.full.bm)
S2.full.bm
rep.S2.bayes.data
rep.data %>%
filter(valid != "drop") %>% # valid participants only
filter(study == "study2") %>% # in study one
filter(trial != "fam") %>%
select(condition, subid, sex, aged, correct, trial)
# prepare data
rep.S2.bayes.data  <- rep.data %>%
filter(valid != "drop") %>% # valid participants only
filter(study == "study2") %>% # in study one
filter(trial != "fam") %>%
select(condition, subid, sex, aged, correct, trial) %>%
mutate(trial = as.numeric(trial))
rep.S2.bayes.data
# prepare data
rep.S2.bayes.data  <- rep.data %>%
filter(valid != "drop") %>% # valid participants only
filter(study == "study2") %>% # in study one
filter(trial != "fam") %>%
select(condition, subid, sex, aged, correct, trial) %>%
mutate(trial = as.numeric(as.character(trial)))
rep.S2.bayes.data
# prepare data
rep.S2.bayes.data  <- rep.data %>%
filter(valid != "drop") %>% # valid participants only
filter(study == "study2") %>% # in study one
filter(trial != "fam") %>%
select(condition, subid, sex, aged, correct, trial) %>%
mutate(z.trial = scale(trial),
z.age = aged - mean(aged),
z.sex = scale(as.numeric(sex)))
# prepare data
rep.S2.bayes.data  <- rep.data %>%
filter(valid != "drop") %>% # valid participants only
filter(study == "study2") %>% # in study one
filter(trial != "fam") %>%
select(condition, subid, sex, aged, correct, trial) %>%
mutate(z.trial = scale(as.numeric(s.character(trial))),
z.age = aged - mean(aged),
z.sex = scale(as.numeric(sex)))
# prepare data
rep.S2.bayes.data  <- rep.data %>%
filter(valid != "drop") %>% # valid participants only
filter(study == "study2") %>% # in study one
filter(trial != "fam") %>%
select(condition, subid, sex, aged, correct, trial) %>%
mutate(z.trial = scale(as.numeric(as.character(trial))),
z.age = aged - mean(aged),
z.sex = scale(as.numeric(sex)))
rep.S2.bayes.data
cor(rep.S2.bayes.data$age, rep.S2.bayes.data$z.age)
rep.S2.bayes.data
rep.S2.bayes.data$age
cor(rep.S2.bayes.data$aged, rep.S2.bayes.data$z.age)
# prepare data
rep.S2.bayes.data  <- rep.data %>%
filter(valid != "drop") %>% # valid participants only
filter(study == "study2") %>% # in study one
filter(trial != "fam") %>%
select(condition, subid, sex, aged, correct, trial) %>%
mutate(z.trial = scale(as.numeric(as.character(trial))),
z.age = aged - mean(aged),
z.sex = scale(as.numeric(sex)))
S2.full.bm<-brm(correct~condition*z.age+z.trial+sex+(z.trial|subid),
data=rep.S2.bayes.data,
family=bernoulli(),
chains = 4,
iter= 5000,
cores= 4)
S2.full.bm<-brm(correct~condition*z.age+z.trial+sex+(z.trial|subid),
data=rep.S2.bayes.data,
family=bernoulli(),
chains = 4,
iter= 2000,
cores= 4)
S2.full.bm
rep.S2.bayes.data
unique(rep.data$correct)
unique(rep.S2.bayes.data$correct)
unique(rep.S2.bayes.data$correct)
# prepare data
rep.S2.bayes.data  <- rep.data %>%
filter(valid != "drop") %>% # valid participants only
filter(study == "study2") %>% # in study one
filter(trial != "fam") %>%
select(condition, subid, sex, aged, correct, trial) %>%
mutate(z.trial = scale(as.numeric(as.character(trial))),
z.age = aged - mean(aged),
z.sex = scale(as.numeric(sex)),
subid = paste0("id", subid))
rep.S2.bayes.data
S2.full.bm<-brm(correct~1+(1|subid),
data=rep.S2.bayes.data,
family=bernoulli(),
chains = 4,
iter= 2000,
cores= 4)
S2.full.bm
S2.full.bm<-brm(correct~condition+z.age+(1|subid),
data=rep.S2.bayes.data,
family=bernoulli(),
chains = 4,
iter= 2000,
cores= 4)
S2.full.bm
# prepare data
rep.S2.bayes.data  <- rep.data %>%
filter(valid != "drop") %>% # valid participants only
filter(study == "study2") %>% # in study one
filter(trial != "fam") %>%
select(condition, subid, sex, aged, correct, trial) %>%
mutate(z.trial = scale(as.numeric(as.character(trial))),
z.age = aged - mean(aged),
z.sex = scale(as.numeric(sex)),
subid = paste0("id", subid))%>%
droplevels()
str(rep.S2.bayes.data)
# prepare data
rep.S2.bayes.data  <- rep.data %>%
filter(valid != "drop") %>% # valid participants only
filter(study == "study2") %>% # in study one
filter(trial != "fam") %>%
select(condition, subid, sex, aged, correct, trial) %>%
mutate(z.trial = scale(as.numeric(as.character(trial))),
z.age = aged - mean(aged),
z.sex = scale(as.numeric(sex)),
subid = paste0("id", subid))%>%
droplevels(condition)
# prepare data
rep.S2.bayes.data  <- rep.data %>%
filter(valid != "drop") %>% # valid participants only
filter(study == "study2") %>% # in study one
filter(trial != "fam") %>%
select(condition, subid, sex, aged, correct, trial) %>%
mutate(z.trial = scale(as.numeric(as.character(trial))),
z.age = aged - mean(aged),
z.sex = scale(as.numeric(sex)),
subid = paste0("id", subid))%>%
mutate(condition = droplevels(condition))
str(rep.S2.bayes.data)
# prepare data
rep.S2.bayes.data  <- rep.data %>%
filter(valid != "drop") %>% # valid participants only
filter(study == "study2") %>% # in study one
filter(trial != "fam") %>%
select(condition, subid, sex, aged, correct, trial) %>%
mutate(z.trial = scale(as.numeric(as.character(trial))),
z.age = aged - mean(aged),
z.sex = scale(as.numeric(sex)),
subid = paste0("id", subid))%>%
mutate(condition = droplevels(condition))
# prepare data
rep.S2.bayes.data  <- rep.data %>%
filter(valid != "drop") %>% # valid participants only
filter(study == "study2") %>% # in study one
filter(trial != "fam") %>%
select(condition, subid, sex, aged, correct, trial) %>%
mutate(z.trial = scale(as.numeric(as.character(trial))),
z.age = aged - mean(aged),
z.sex = scale(as.numeric(sex)),
subid = paste0("id", subid))%>%
mutate(condition = as.character(condition))
# prepare data
rep.S2.bayes.data  <- rep.data %>%
filter(valid != "drop") %>% # valid participants only
filter(study == "study2") %>% # in study one
filter(trial != "fam") %>%
select(condition, subid, sex, aged, correct, trial) %>%
mutate(z.trial = scale(as.numeric(as.character(trial))),
z.age = aged - mean(aged),
z.sex = scale(as.numeric(sex)),
subid = paste0("id", subid))%>%
mutate(condition = factor(as.character(condition)))
str(rep.S2.bayes.data)
# prepare data
rep.S2.bayes.data  <- rep.data %>%
filter(valid != "drop") %>% # valid participants only
filter(study == "study2") %>% # in study one
filter(trial != "fam") %>%
select(condition, subid, sex, aged, correct, trial) %>%
mutate(z.trial = scale(as.numeric(as.character(trial))),
z.age = aged - mean(aged),
z.sex = scale(as.numeric(sex)),
subid = paste0("id", subid))%>%
mutate(condition = as.character(condition))
unique(rep.S2.bayes.data$condition)
rep.S2.bayes.data%>%
filter(condition == "Pars Pro Toto")
table(rep.data$study, rep.data$condition)
S2.full.bm
# load model from saving rds
S3.full.bm <- readRDS("../models/S3.full.bm.rds")
S3.full.bm
# load model from saving rds
S3.full.bm <- readRDS("../models/S3.full.bm.rds")
S3.full.bm
# load model from rds
S1.full.bm <- readRDS("../models/S1.full.bm.rds")
S1.full.bm
# Full data set including all participants (i.e. including dropped participants)
rep.data <- readRDS("../data/symlitrep_final_data.rds")
rep.data
# Full data set including all participants (i.e. including dropped participants)
rep.data <- readRDS("../data/symlitrep_final_data.rds")%>%
mutate(ageinyears = aged/356.25)
# Full data set including all participants (i.e. including dropped participants)
rep.data <- readRDS("../data/symlitrep_final_data.rds")%>%
mutate(ageinyears = aged/356.25,
z.age = ageinyears - mean(ageinyears))
rep.data
# Full data set including all participants (i.e. including dropped participants)
rep.data <- readRDS("../data/symlitrep_final_data.rds")%>%
mutate(ageinyears = aged/356.25,
z.age = ageinyears - mean(ageinyears))
# prepare data
rep.S1.bayes.data  <- rep.data %>%
filter(valid != "drop") %>% # valid participants only
filter(study == "study1") %>% # in study one
filter(trial != "fam") %>%
select(condition, subid, sex, ageinyears, correct, trial) %>%
mutate(z.trial = scale(as.numeric(trial)),
z.age = ageinyears - mean(ageinyears),
z.sex = scale(as.numeric(sex)))
rep.S1.bayes.data
S1.full.bm<-brm(correct~condition*z.age+z.trial+z.sex+(z.trial|subid),
data= rep.S1.bayes.data,
family=bernoulli(),
chains = 4,
iter= 5000,
cores= 4)
S1.full.bm<-brm(correct~condition*z.age+z.trial+z.sex+(z.trial|subid),
data= rep.S1.bayes.data,
family=bernoulli(),
chains = 4,
iter= 2000,
cores= 4)
S1.full.bm
nd1 <- tibble(z.age = rep(seq(from = min(rep.S1.bayes.data$z.age), to = max(rep.S1.bayes.data$z.age), length.out = 50),4),
condition = c(rep("Representation",50),
rep("Pars Pro Toto",50),
rep("Complex Form Analogy",50),
rep("Simple Form Analogy",50)),
# the four conditions in the data
z.sex = rep(0,200),
z.trial = rep(0,200))
# here we generate the fitted values based on the model
# the function fitted() takes in the model and the new dataset and generates a fitted values (inclucing upper and lower 95% CI) for every row in the dataset
# because our dataset ranges from min age to max age in the data, we get the prediction for the age range in the data
# but we could also generate predictions for different ages of course
f1 <- fitted(S1.full.bm,
newdata = nd1,
re_formula = NA) %>%
# this tells the function to ignore the random effects - in theory, we could generate predictions for specific individuals
as_tibble() %>%
bind_cols(nd1)%>%
mutate(age = z.age + mean(rep.S1.bayes.data$ageinyears)) # convert age back to the original scale by adding the mean of the data
# summarize the data to include them in the plot later on
d1 <- rep.S1.bayes.data%>%
group_by(subid, ageinyears, condition)%>%
summarise(mean = mean(correct))
p1 <- f1 %>%
group_by(condition)%>%
summarise(
Q2.5_closest_to.5 = Q2.5[which.min(abs(Q2.5-.5))],
estimate_closest_to.5 = Estimate[which.min(abs(Q2.5-.5))],
days = age[which.min(abs(Q2.5-.5))],
months = round(days/30.5),
years = round(days/355.25, 2),
monthlabels = as.character(paste(months, "months"))
)
ggplot()+
geom_hline(yintercept = .5, lty = 2, alpha = .75)+
geom_point(data = d1, aes(x = aged/365, y = mean, col = condition), alpha = .5, shape = 1)+
geom_smooth(data = f1, aes(x = age/365, y = Estimate, ymin = Q2.5, ymax = Q97.5, fill =condition, col = condition),
stat = "identity", alpha = .25)+
geom_point(data=p1, aes(x = days/364.25, y = .5, fill = condition, col = condition), stat = "identity", size=3)+
geom_text(data=p1, aes(label = months, x = days/364.25, y = .24, fill = condition, col = condition), angle=90, size = 4, parse=T)+
geom_text(data=p1, aes(label = "months", x = days/364.25, y = .38, fill = condition, col = condition), angle=90, size = 4, parse=T)+
theme_minimal()+
scale_color_ptol(name = "condition")+
scale_fill_ptol(name = "condition")+
#facet_grid(~condition)+
labs(x = "Age", y="Proportion correct")+
ylim(0,1)+
xlim(3,7)+
theme(legend.position = "bottom")
p1 <- f1 %>%
group_by(condition)%>%
summarise(
Q2.5_closest_to.5 = Q2.5[which.min(abs(Q2.5-.5))],
estimate_closest_to.5 = Estimate[which.min(abs(Q2.5-.5))],
days = age[which.min(abs(Q2.5-.5))],
months = round(days/30.5),
years = round(days/355.25, 2),
monthlabels = as.character(paste(months, "months"))
)
ggplot()+
geom_hline(yintercept = .5, lty = 2, alpha = .75)+
geom_point(data = d1, aes(x = ageinyears, y = mean, col = condition), alpha = .5, shape = 1)+
geom_smooth(data = f1, aes(x = ageinyears, y = Estimate, ymin = Q2.5, ymax = Q97.5, fill =condition, col = condition),
stat = "identity", alpha = .25)+
geom_point(data=p1, aes(x = days/364.25, y = .5, fill = condition, col = condition), stat = "identity", size=3)+
geom_text(data=p1, aes(label = months, x = days/364.25, y = .24, fill = condition, col = condition), angle=90, size = 4, parse=T)+
geom_text(data=p1, aes(label = "months", x = days/364.25, y = .38, fill = condition, col = condition), angle=90, size = 4, parse=T)+
theme_minimal()+
scale_color_ptol(name = "condition")+
scale_fill_ptol(name = "condition")+
#facet_grid(~condition)+
labs(x = "Age", y="Proportion correct")+
ylim(0,1)+
xlim(3,7)+
theme(legend.position = "bottom")
d1
f1
ggplot()+
geom_hline(yintercept = .5, lty = 2, alpha = .75)+
#geom_point(data = d1, aes(x = ageinyears, y = mean, col = condition), alpha = .5, shape = 1)+
geom_smooth(data = f1, aes(x = ageinyears, y = Estimate, ymin = Q2.5, ymax = Q97.5, fill =condition, col = condition),
stat = "identity", alpha = .25)+
#geom_point(data=p1, aes(x = days/364.25, y = .5, fill = condition, col = condition), stat = "identity", size=3)+
#geom_text(data=p1, aes(label = months, x = days/364.25, y = .24, fill = condition, col = condition), angle=90, size = 4, parse=T)+
#geom_text(data=p1, aes(label = "months", x = days/364.25, y = .38, fill = condition, col = condition), angle=90, size = 4, parse=T)+
theme_minimal()+
scale_color_ptol(name = "condition")+
scale_fill_ptol(name = "condition")+
#facet_grid(~condition)+
labs(x = "Age", y="Proportion correct")+
ylim(0,1)+
xlim(3,7)+
theme(legend.position = "bottom")
f1
ggplot()+
geom_hline(yintercept = .5, lty = 2, alpha = .75)+
#geom_point(data = d1, aes(x = ageinyears, y = mean, col = condition), alpha = .5, shape = 1)+
geom_smooth(data = f1, aes(x = age, y = Estimate, ymin = Q2.5, ymax = Q97.5, fill =condition, col = condition),
stat = "identity", alpha = .25)+
#geom_point(data=p1, aes(x = days/364.25, y = .5, fill = condition, col = condition), stat = "identity", size=3)+
#geom_text(data=p1, aes(label = months, x = days/364.25, y = .24, fill = condition, col = condition), angle=90, size = 4, parse=T)+
#geom_text(data=p1, aes(label = "months", x = days/364.25, y = .38, fill = condition, col = condition), angle=90, size = 4, parse=T)+
theme_minimal()+
scale_color_ptol(name = "condition")+
scale_fill_ptol(name = "condition")+
#facet_grid(~condition)+
labs(x = "Age", y="Proportion correct")+
ylim(0,1)+
xlim(3,7)+
theme(legend.position = "bottom")
ggplot()+
geom_hline(yintercept = .5, lty = 2, alpha = .75)+
geom_point(data = d1, aes(x = ageinyears, y = mean, col = condition), alpha = .5, shape = 1)+
geom_smooth(data = f1, aes(x = age, y = Estimate, ymin = Q2.5, ymax = Q97.5, fill =condition, col = condition),
stat = "identity", alpha = .25)+
#geom_point(data=p1, aes(x = days/364.25, y = .5, fill = condition, col = condition), stat = "identity", size=3)+
#geom_text(data=p1, aes(label = months, x = days/364.25, y = .24, fill = condition, col = condition), angle=90, size = 4, parse=T)+
#geom_text(data=p1, aes(label = "months", x = days/364.25, y = .38, fill = condition, col = condition), angle=90, size = 4, parse=T)+
theme_minimal()+
scale_color_ptol(name = "condition")+
scale_fill_ptol(name = "condition")+
#facet_grid(~condition)+
labs(x = "Age", y="Proportion correct")+
ylim(0,1)+
xlim(3,7)+
theme(legend.position = "bottom")
ggplot()+
geom_hline(yintercept = .5, lty = 2, alpha = .75)+
geom_point(data = d1, aes(x = ageinyears, y = mean, col = condition), alpha = .5, shape = 1)+
geom_smooth(data = f1, aes(x = age, y = Estimate, ymin = Q2.5, ymax = Q97.5, fill =condition, col = condition),
stat = "identity", alpha = .25)+
geom_point(data=p1, aes(x = days/364.25, y = .5, fill = condition, col = condition), stat = "identity", size=3)+
#geom_text(data=p1, aes(label = months, x = days/364.25, y = .24, fill = condition, col = condition), angle=90, size = 4, parse=T)+
#geom_text(data=p1, aes(label = "months", x = days/364.25, y = .38, fill = condition, col = condition), angle=90, size = 4, parse=T)+
theme_minimal()+
scale_color_ptol(name = "condition")+
scale_fill_ptol(name = "condition")+
#facet_grid(~condition)+
labs(x = "Age", y="Proportion correct")+
ylim(0,1)+
xlim(3,7)+
theme(legend.position = "bottom")
ggplot()+
geom_hline(yintercept = .5, lty = 2, alpha = .75)+
geom_point(data = d1, aes(x = ageinyears, y = mean, col = condition), alpha = .5, shape = 1)+
geom_smooth(data = f1, aes(x = age, y = Estimate, ymin = Q2.5, ymax = Q97.5, fill =condition, col = condition),
stat = "identity", alpha = .25)+
#geom_point(data=p1, aes(x = days/364.25, y = .5, fill = condition, col = condition), stat = "identity", size=3)+
#geom_text(data=p1, aes(label = months, x = days/364.25, y = .24, fill = condition, col = condition), angle=90, size = 4, parse=T)+
#geom_text(data=p1, aes(label = "months", x = days/364.25, y = .38, fill = condition, col = condition), angle=90, size = 4, parse=T)+
theme_minimal()+
scale_color_ptol(name = "condition")+
scale_fill_ptol(name = "condition")+
#facet_grid(~condition)+
labs(x = "Age", y="Proportion correct")+
ylim(0,1)+
xlim(3,7)+
theme(legend.position = "bottom")
ggplot()+
geom_hline(yintercept = .5, lty = 2, alpha = .75)+
geom_point(data = d1, aes(x = ageinyears, y = mean, col = condition), alpha = .5, shape = 1)+
geom_smooth(data = f1, aes(x = age, y = Estimate, ymin = Q2.5, ymax = Q97.5, fill =condition, col = condition),
stat = "identity", alpha = .25)+
#geom_point(data=p1, aes(x = days/364.25, y = .5, fill = condition, col = condition), stat = "identity", size=3)+
geom_text(data=p1, aes(label = months, x = days/364.25, y = .24, fill = condition, col = condition), angle=90, size = 4, parse=T)+
#geom_text(data=p1, aes(label = "months", x = days/364.25, y = .38, fill = condition, col = condition), angle=90, size = 4, parse=T)+
theme_minimal()+
scale_color_ptol(name = "condition")+
scale_fill_ptol(name = "condition")+
#facet_grid(~condition)+
labs(x = "Age", y="Proportion correct")+
ylim(0,1)+
xlim(3,7)+
theme(legend.position = "bottom")
ggplot()+
geom_hline(yintercept = .5, lty = 2, alpha = .75)+
geom_point(data = d1, aes(x = ageinyears, y = mean, col = condition), alpha = .5, shape = 1)+
geom_smooth(data = f1, aes(x = age, y = Estimate, ymin = Q2.5, ymax = Q97.5, fill =condition, col = condition),
stat = "identity", alpha = .25)+
#geom_point(data=p1, aes(x = days/364.25, y = .5, fill = condition, col = condition), stat = "identity", size=3)+
geom_text(data=p1, aes(label = months, x = days/364.25, y = .24, fill = condition, col = condition), angle=90, size = 4, parse=T)+
geom_text(data=p1, aes(label = "months", x = days/364.25, y = .38, fill = condition, col = condition), angle=90, size = 4, parse=T)+
theme_minimal()+
scale_color_ptol(name = "condition")+
scale_fill_ptol(name = "condition")+
#facet_grid(~condition)+
labs(x = "Age", y="Proportion correct")+
ylim(0,1)+
xlim(3,7)+
theme(legend.position = "bottom")
ggplot()+
geom_hline(yintercept = .5, lty = 2, alpha = .75)+
geom_point(data = d1, aes(x = ageinyears, y = mean, col = condition), alpha = .5, shape = 1)+
geom_smooth(data = f1, aes(x = age, y = Estimate, ymin = Q2.5, ymax = Q97.5, fill =condition, col = condition),
stat = "identity", alpha = .25)+
geom_point(data=p1, aes(x = days/364.25, y = .5, fill = condition, col = condition), stat = "identity", size=3)+
geom_text(data=p1, aes(label = months, x = days/364.25, y = .24, fill = condition, col = condition), angle=90, size = 4, parse=T)+
geom_text(data=p1, aes(label = "months", x = days/364.25, y = .38, fill = condition, col = condition), angle=90, size = 4, parse=T)+
theme_minimal()+
scale_color_ptol(name = "condition")+
scale_fill_ptol(name = "condition")+
#facet_grid(~condition)+
labs(x = "Age", y="Proportion correct")+
ylim(0,1)+
xlim(3,7)+
theme(legend.position = "bottom")
f1
d1
ggplot()+
geom_hline(yintercept = .5, lty = 2, alpha = .75)+
geom_point(data = d1, aes(x = ageinyears, y = mean, col = condition), alpha = .5, shape = 1)+
geom_smooth(data = f1, aes(x = age, y = Estimate, ymin = Q2.5, ymax = Q97.5, fill =condition, col = condition),
stat = "identity", alpha = .25)+
geom_point(data=p1, aes(x = days/364.25, y = .5, fill = condition, col = condition), stat = "identity", size=3)+
geom_text(data=p1, aes(label = months, x = days/364.25, y = .24, fill = condition, col = condition), angle=90, size = 4, parse=T)+
geom_text(data=p1, aes(label = "months", x = days/364.25, y = .38, fill = condition, col = condition), angle=90, size = 4, parse=T)+
theme_minimal()+
scale_color_ptol(name = "condition")+
scale_fill_ptol(name = "condition")+
#facet_grid(~condition)+
labs(x = "Age", y="Proportion correct")+
ylim(0,1)+
xlim(3,7)+
theme(legend.position = "bottom")
ggplot()+
geom_hline(yintercept = .5, lty = 2, alpha = .75)+
geom_point(data = d1, aes(x = ageinyears, y = mean, col = condition), alpha = .5, shape = 1)+
geom_smooth(data = f1, aes(x = age, y = Estimate, ymin = Q2.5, ymax = Q97.5, fill =condition, col = condition),
stat = "identity", alpha = .25)+
geom_point(data=p1, aes(x = days/364.25, y = .5, fill = condition, col = condition), stat = "identity", size=3)+
geom_text(data=p1, aes(label = months, x = days/364.25, y = .24, fill = condition, col = condition), angle=90, size = 4, parse=T)+
geom_text(data=p1, aes(label = "months", x = days/364.25, y = .38, fill = condition, col = condition), angle=90, size = 4, parse=T)+
theme_minimal()+
scale_color_ptol(name = "condition")+
scale_fill_ptol(name = "condition")+
#facet_grid(~condition)+
labs(x = "Age", y="Proportion correct")
p1
f1
p1 <- f1 %>%
mutate(age = age * 365.25)%>%
group_by(condition)%>%
summarise(
Q2.5_closest_to.5 = Q2.5[which.min(abs(Q2.5-.5))],
estimate_closest_to.5 = Estimate[which.min(abs(Q2.5-.5))],
days = age[which.min(abs(Q2.5-.5))],
months = round(days/30.5),
years = round(days/355.25, 2),
monthlabels = as.character(paste(months, "months"))
)
ggplot()+
geom_hline(yintercept = .5, lty = 2, alpha = .75)+
geom_point(data = d1, aes(x = ageinyears, y = mean, col = condition), alpha = .5, shape = 1)+
geom_smooth(data = f1, aes(x = age, y = Estimate, ymin = Q2.5, ymax = Q97.5, fill =condition, col = condition),
stat = "identity", alpha = .25)+
geom_point(data=p1, aes(x = days/364.25, y = .5, fill = condition, col = condition), stat = "identity", size=3)+
geom_text(data=p1, aes(label = months, x = days/364.25, y = .24, fill = condition, col = condition), angle=90, size = 4, parse=T)+
geom_text(data=p1, aes(label = "months", x = days/364.25, y = .38, fill = condition, col = condition), angle=90, size = 4, parse=T)+
theme_minimal()+
scale_color_ptol(name = "condition")+
scale_fill_ptol(name = "condition")+
#facet_grid(~condition)+
labs(x = "Age", y="Proportion correct")+
ylim(0,1)+
xlim(3,7)+
theme(legend.position = "bottom")
S1.full.bm
