# required for rounding pvalues, is part of tidyverse but needs to be loaded again? ## it occurs when functions are overwritten multiple times
rep.s1.freq <- rep.S1.bayes.data %>%
mutate(Age = paste0(agey, "-year-olds"),
Condition = condition) %>%
group_by(Condition, `Age group`, subid) %>%
summarise("correct" = mean(correct),
"trials" = n()) %>%
ungroup() %>%
group_by(Condition, Age) %>%
summarise(N = n_distinct(subid),
trials = sum(trials),
"trials/N" = round(sum(trials)/n_distinct(subid), 2),
"M" = round(mean(correct)*100, 2),
"SD" = round(sd(correct)*100, 2),
p = pvalue(t.test((correct), mu = 0.5)$p.value, accuracy = .001),
df= t.test((correct), mu = 0.5)$parameter,
"t(N-1)" = round(t.test((correct), mu = 0.5)$statistic, 2),
d = round(cohensD((correct), mu = 0.5), 2))
#library(scales)
# required for rounding pvalues, is part of tidyverse but needs to be loaded again? ## it occurs when functions are overwritten multiple times
rep.s1.freq <- rep.S1.bayes.data %>%
mutate(Age = paste0(agey, "-year-olds"),
Condition = condition) %>%
group_by(Condition, Age, subid) %>%
summarise("correct" = mean(correct),
"trials" = n()) %>%
ungroup() %>%
group_by(Condition, Age) %>%
summarise(N = n_distinct(subid),
trials = sum(trials),
"trials/N" = round(sum(trials)/n_distinct(subid), 2),
"M" = round(mean(correct)*100, 2),
"SD" = round(sd(correct)*100, 2),
p = pvalue(t.test((correct), mu = 0.5)$p.value, accuracy = .001),
df= t.test((correct), mu = 0.5)$parameter,
"t(N-1)" = round(t.test((correct), mu = 0.5)$statistic, 2),
d = round(cohensD((correct), mu = 0.5), 2))
rep.s1.freq
# # delete duplicate labels in age by turning age into character and replacing duplicates
# symlitrep.correct.table.data$study <- as.character(symlitrep.correct.table.data$study)
# symlitrep.correct.table.data$study[duplicated(symlitrep.correct.table.data$study)] <- ""
# s1.symlitrep.correct.table.data$condition <- as.character(s1.symlitrep.correct.table.data$condition)
# s1.symlitrep.correct.table.data$condition[duplicated(s1.symlitrep.correct.table.data$condition)] <- ""
#
# kable(s1.symlitrep.correct.table.data, caption = "Overview of Performance for Study 1" )%>%
#   kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
#library(scales)
# required for rounding pvalues, is part of tidyverse but needs to be loaded again? ## it occurs when functions are overwritten multiple times
rep.s1.freq <- rep.S1.bayes.data %>%
mutate(Age = paste0(agey, "-year-olds"),
Condition = condition) %>%
group_by(Condition, Age, subid) %>%
summarise("correct" = mean(correct),
"trials" = n()) %>%
ungroup() %>%
group_by(Condition) %>%
summarise(N = n_distinct(subid),
trials = sum(trials),
"trials/N" = round(sum(trials)/n_distinct(subid), 2),
"M" = round(mean(correct)*100, 2),
"SD" = round(sd(correct)*100, 2),
p = pvalue(t.test((correct), mu = 0.5)$p.value, accuracy = .001),
df= t.test((correct), mu = 0.5)$parameter,
"t(N-1)" = round(t.test((correct), mu = 0.5)$statistic, 2),
d = round(cohensD((correct), mu = 0.5), 2))
rep.s1.freq
# # delete duplicate labels in age by turning age into character and replacing duplicates
# symlitrep.correct.table.data$study <- as.character(symlitrep.correct.table.data$study)
# symlitrep.correct.table.data$study[duplicated(symlitrep.correct.table.data$study)] <- ""
# s1.symlitrep.correct.table.data$condition <- as.character(s1.symlitrep.correct.table.data$condition)
# s1.symlitrep.correct.table.data$condition[duplicated(s1.symlitrep.correct.table.data$condition)] <- ""
#
# kable(s1.symlitrep.correct.table.data, caption = "Overview of Performance for Study 1" )%>%
#   kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
#library(scales)
# required for rounding pvalues, is part of tidyverse but needs to be loaded again? ## it occurs when functions are overwritten multiple times
rep.s1.freq <- rep.S1.bayes.data %>%
mutate(Age = paste0(agey, "-year-olds"),
Condition = condition) %>%
group_by(Condition, Age, subid) %>%
summarise("correct" = mean(correct),
"trials" = n()) %>%
ungroup() %>%
group_by(Condition, Age) %>%
summarise(N = n_distinct(subid),
trials = sum(trials),
"trials/N" = round(sum(trials)/n_distinct(subid), 2),
"M" = round(mean(correct)*100, 2),
"SD" = round(sd(correct)*100, 2),
p = pvalue(t.test((correct), mu = 0.5)$p.value, accuracy = .001),
df= t.test((correct), mu = 0.5)$parameter,
"t(N-1)" = round(t.test((correct), mu = 0.5)$statistic, 2),
d = round(cohensD((correct), mu = 0.5), 2))
rep.s1.freq
# # delete duplicate labels in age by turning age into character and replacing duplicates
# symlitrep.correct.table.data$study <- as.character(symlitrep.correct.table.data$study)
# symlitrep.correct.table.data$study[duplicated(symlitrep.correct.table.data$study)] <- ""
# s1.symlitrep.correct.table.data$condition <- as.character(s1.symlitrep.correct.table.data$condition)
# s1.symlitrep.correct.table.data$condition[duplicated(s1.symlitrep.correct.table.data$condition)] <- ""
#
# kable(s1.symlitrep.correct.table.data, caption = "Overview of Performance for Study 1" )%>%
#   kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
#library(scales)
# required for rounding pvalues, is part of tidyverse but needs to be loaded again? ## it occurs when functions are overwritten multiple times
rep.s1.freq <- rep.S1.bayes.data %>%
mutate(Age = paste0(agey, "-year-olds"),
Condition = condition) %>%
group_by(Condition, Age, subid) %>%
summarise("correct" = mean(correct),
"trials" = n()) %>%
ungroup() %>%
group_by(Condition, Age) %>%
summarise(N = n_distinct(subid),
trials = sum(trials),
"trials/N" = round(sum(trials)/n_distinct(subid), 2),
"M" = round(mean(correct)*100, 2),
"SD" = round(sd(correct)*100, 2),
p = pvalue(t.test((correct), mu = 0.5)$p.value, accuracy = .001),
df= t.test((correct), mu = 0.5)$parameter,
"t(N-1)" = round(t.test((correct), mu = 0.5)$statistic, 2),
d = round(cohensD((correct), mu = 0.5), 2))
rep.s1.freq
# # delete duplicate labels in age by turning age into character and replacing duplicates
# symlitrep.correct.table.data$study <- as.character(symlitrep.correct.table.data$study)
# symlitrep.correct.table.data$study[duplicated(symlitrep.correct.table.data$study)] <- ""
# s1.symlitrep.correct.table.data$condition <- as.character(s1.symlitrep.correct.table.data$condition)
# s1.symlitrep.correct.table.data$condition[duplicated(s1.symlitrep.correct.table.data$condition)] <- ""
#
# kable(s1.symlitrep.correct.table.data, caption = "Overview of Performance for Study 1" )%>%
#   kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
# # delete duplicate labels in age by turning age into character and replacing duplicates
str(rep.s1.freq$Condition)
rep.s1.freq$study[duplicated(rep.s1.freq$Condition)] <- ""
rep.s1.freq$Condition[duplicated(rep.s1.freq$Condition)] <- ""
rep.s1.freq$Condition <- as.character(rep.s1.freq$Condition)
rep.s1.freq$Condition[duplicated(rep.s1.freq$Condition)] <- ""
rep.s1.freq
kable(rep.s1.freq, caption = "Overview of Performance for Study 1" )%>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
#library(scales)
# required for rounding pvalues, is part of tidyverse but needs to be loaded again? ## it occurs when functions are overwritten multiple times
rep.s1.freq <- rep.S1.bayes.data %>%
mutate(Age = paste0(agey, "-year-olds"),
Condition = condition) %>%
group_by(Condition, Age, subid) %>%
summarise("correct" = mean(correct),
"trials" = n()) %>%
ungroup() %>%
group_by(Condition, Age) %>%
summarise(N = n_distinct(subid),
trials = sum(trials),
"trials/N" = round(sum(trials)/n_distinct(subid), 2),
"M" = round(mean(correct)*100, 2),
"SD" = round(sd(correct)*100, 2),
p = pvalue(t.test((correct), mu = 0.5)$p.value, accuracy = .001),
df= t.test((correct), mu = 0.5)$parameter,
"t(N-1)" = round(t.test((correct), mu = 0.5)$statistic, 2),
d = round(cohensD((correct), mu = 0.5), 2))
# # delete duplicate labels in age by turning age into character and replacing duplicates
rep.s1.freq$Condition <- as.character(rep.s1.freq$Condition)
rep.s1.freq$Condition[duplicated(rep.s1.freq$Condition)] <- ""
rep.s1.freq
# s1.symlitrep.correct.table.data$condition <- as.character(s1.symlitrep.correct.table.data$condition)
# s1.symlitrep.correct.table.data$condition[duplicated(s1.symlitrep.correct.table.data$condition)] <- ""
#
kable(rep.s1.freq, caption = "Overview of Performance for Study 1" )%>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
#library(scales)
# required for rounding pvalues, is part of tidyverse but needs to be loaded again? ## it occurs when functions are overwritten multiple times
rep.s1.freq <- rep.S1.bayes.data %>%
mutate(Age = paste0(agey, "-year-olds"),
Condition = condition) %>%
group_by(Condition, Age, subid) %>%
summarise("correct" = mean(correct),
"trials" = n()) %>%
ungroup() %>%
group_by(Condition, Age) %>%
summarise(N = n_distinct(subid),
trials = sum(trials),
"trials/N" = round(sum(trials)/n_distinct(subid), 2),
"M" = round(mean(correct)*100, 2),
"SD" = round(sd(correct)*100, 2),
p = pvalue(t.test((correct), mu = 0.5)$p.value, accuracy = .001),
df= t.test((correct), mu = 0.5)$parameter,
"t(N-1)" = round(t.test((correct), mu = 0.5)$statistic, 2),
d = round(cohensD((correct), mu = 0.5), 2))
# # delete duplicate labels in age by turning age into character and replacing duplicates
rep.s1.freq$Condition <- as.character(rep.s1.freq$Condition)
rep.s1.freq$Condition[duplicated(rep.s1.freq$Condition)] <- ""
kable(rep.s1.freq, caption = "Overview of Performance for Study 1" )%>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
library("papaja")
r_refs("library.bib")
# Loading packages
# NOTE: this will install these packages on your machine in case they are missing
# General
if (!require(tidyverse)) install.packages('tidyverse'); library(tidyverse)
if (!require(lsr)) install.packages('lsr'); library(lsr) # Analysis, Cohen's D
if (!require(ggthemes)) install.packages('ggthemes'); library(ggthemes) # for tufte boxplots
if (!require(kable)) install.packages('kable'); library(kable) # for tufte boxplots
install.packages("kable")
if (!require(kable)) install.packages('kable'); library(kable)
if (!require(ggthemes)) install.packages('ggthemes'); library(ggthemes) # for tufte boxplots
if (!require(kableExtra)) install.packages('kableExtra'); library(kableExtra)
library("papaja")
r_refs("library.bib")
# Loading packages
# NOTE: this will install these packages on your machine in case they are missing
# General
if (!require(tidyverse)) install.packages('tidyverse'); library(tidyverse)
if (!require(lsr)) install.packages('lsr'); library(lsr) # Analysis, Cohen's D
if (!require(ggthemes)) install.packages('ggthemes'); library(ggthemes) # for tufte boxplots
if (!require(kableExtra)) install.packages('kableExtra'); library(kableExtra)
# bayes packages
if (!require(brms)) install.packages('brms'); library(brms) #
if (!require(tidybayes)) install.packages('tidybayes'); library(tidybayes) #
if (!require(HDInterval)) install.packages('HDInterval'); library(HDInterval) #
if (!require(posterior)) install.packages('posterior'); library(posterior) #
# basic analyses
if (!require(scales)) install.packages('scales'); library(scales) #
# Troubleshooting Knitting Document
# might be required for knitting manuscript
# install.packages('tinytex')
# tinytex::install_tinytex()
#
# tinytex::tlmgr_update()
# tinytex::reinstall_tinytex()
#library(scales)
# required for rounding pvalues, is part of tidyverse but needs to be loaded again? ## it occurs when functions are overwritten multiple times
rep.s1.freq <- rep.S1.bayes.data %>%
mutate(Age = paste0(agey, "-year-olds"),
Condition = condition) %>%
group_by(Condition, Age, subid) %>%
summarise("correct" = mean(correct),
"trials" = n()) %>%
ungroup() %>%
group_by(Condition, Age) %>%
summarise(N = n_distinct(subid),
trials = sum(trials),
"trials/N" = round(sum(trials)/n_distinct(subid), 2),
"M" = round(mean(correct)*100, 2),
"SD" = round(sd(correct)*100, 2),
p = pvalue(t.test((correct), mu = 0.5)$p.value, accuracy = .001),
df= t.test((correct), mu = 0.5)$parameter,
"t(N-1)" = round(t.test((correct), mu = 0.5)$statistic, 2),
d = round(cohensD((correct), mu = 0.5), 2))
# # delete duplicate labels in age by turning age into character and replacing duplicates
rep.s1.freq$Condition <- as.character(rep.s1.freq$Condition)
rep.s1.freq$Condition[duplicated(rep.s1.freq$Condition)] <- ""
kable(rep.s1.freq, caption = $"Overview of Performance for Study 1"$ )%>%
#library(scales)
# required for rounding pvalues, is part of tidyverse but needs to be loaded again? ## it occurs when functions are overwritten multiple times
rep.s1.freq <- rep.S1.bayes.data %>%
mutate(Age = paste0(agey, "-year-olds"),
Condition = condition) %>%
group_by(Condition, Age, subid) %>%
summarise("correct" = mean(correct),
"trials" = n()) %>%
ungroup() %>%
group_by(Condition, Age) %>%
summarise(N = n_distinct(subid),
trials = sum(trials),
"trials/N" = round(sum(trials)/n_distinct(subid), 2),
"M" = round(mean(correct)*100, 2),
"SD" = round(sd(correct)*100, 2),
p = pvalue(t.test((correct), mu = 0.5)$p.value, accuracy = .001),
df= t.test((correct), mu = 0.5)$parameter,
"t(N-1)" = round(t.test((correct), mu = 0.5)$statistic, 2),
d = round(cohensD((correct), mu = 0.5), 2))
# # delete duplicate labels in age by turning age into character and replacing duplicates
rep.s1.freq$Condition <- as.character(rep.s1.freq$Condition)
rep.s1.freq$Condition[duplicated(rep.s1.freq$Condition)] <- ""
kable(rep.s1.freq) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
apa_table(
rep.s1.freq
, caption = "Descriptive statistics of correct recall by dosage."
, note = "This table was created with apa_table()."
, escape = TRUE
)
#library(scales)
# required for rounding pvalues, is part of tidyverse but needs to be loaded again? ## it occurs when functions are overwritten multiple times
rep.s2.freq <- rep.S2.bayes.data %>%
mutate(Age = paste0(agey, "-year-olds"),
Condition = condition) %>%
group_by(Condition, Age, subid) %>%
summarise("correct" = mean(correct),
"trials" = n()) %>%
ungroup() %>%
group_by(Condition, Age) %>%
summarise(N = n_distinct(subid),
trials = sum(trials),
"trials/N" = round(sum(trials)/n_distinct(subid), 2),
"M" = round(mean(correct)*100, 2),
"SD" = round(sd(correct)*100, 2),
p = pvalue(t.test((correct), mu = 0.5)$p.value, accuracy = .001),
df= t.test((correct), mu = 0.5)$parameter,
"t(N-1)" = round(t.test((correct), mu = 0.5)$statistic, 2),
d = round(cohensD((correct), mu = 0.5), 2))
# Full data set including all participants (i.e. including dropped participants)
rep.data <- readRDS("../data/symlitrep_final_data.rds")
# test  <- rep.data %>%
#   #filter(valid != "drop") %>% # valid participants only
#   filter(trial != "fam") %>%
#   group_by(subid, agem) %>%
#   summarize(participants = n_distinct(subid),
#             trials = n())
# Study1
rep.S1.bayes.data  <- rep.data %>%
filter(valid != "drop") %>% # valid participants only
filter(study == "study1") %>% # in study one
filter(trial != "fam") %>%
select(condition, subid, sex, aged, agey, agem, correct, trial, rt, cue) %>%
mutate(condition = factor(condition, levels = c(
"Representation", # first level becomes reference
"Pars Pro Toto",
"Simple Form Analogy",
"Complex Form Analogy"))) %>%
mutate(sex = factor(sex, levels = c(
"0", # first level becomes reference
"1"))) %>%
mutate(z.trial = scale(as.numeric(trial)),
ageinyears = aged/365.25,
z.age = ageinyears - mean(ageinyears),
z.sex = scale(as.numeric(sex))) %>%
mutate(item = gsub("_A.png", "", cue)) %>%
mutate(item = gsub("_B.png", "", item))
# Study2
rep.S2.bayes.data  <- rep.data %>%
filter(valid != "drop") %>% # valid participants only
filter(study == "study2") %>% # in study two
filter(trial != "fam") %>%
select(condition, subid, sex, aged, agey, agem, correct, trial, rt, cue) %>%
mutate(condition = factor(condition, levels = c(
"Absolute Position", # first level becomes reference
"Relative Position",
"Orientation of Object",
"Orientation of Feature"))) %>%
mutate(sex = factor(sex, levels = c(
"0", # first level becomes reference
"1"))) %>%
mutate(z.trial = scale(as.numeric(trial)),
ageinyears = aged/365.25,
z.age = ageinyears - mean(ageinyears),
z.sex = scale(as.numeric(sex))) %>%
mutate(item = gsub("_A.png", "", cue)) %>%
mutate(item = gsub("_B.png", "", item))
# Study 3
rep.S3.bayes.data  <- rep.data %>%
filter(valid != "drop") %>% # valid participants only
filter(study == "study3") %>% # in study two
filter(trial != "fam") %>%
select(condition, subid, sex, aged, agey, agem, correct, trial, rt, cue) %>%
mutate(condition = factor(condition, levels = c(
"Size of Object", # first level becomes reference
"Size of Feature",
"Number of Object",
"Number of Feature"))) %>%
mutate(sex = factor(sex, levels = c(
"0", # first level becomes reference
"1"))) %>%
mutate(z.trial = scale(as.numeric(trial)),
ageinyears = aged/365.25,
z.age = ageinyears - mean(ageinyears),
z.sex = scale(as.numeric(sex))) %>%
mutate(item = gsub("_A.png", "", cue)) %>%
mutate(item = gsub("_B.png", "", item))
# test <- rep.data %>%
#   filter(valid != "drop") %>%
#   group_by(study) %>%
#   summarize(min_Age = min(agem))
# test <- rep.data %>%
#   filter(valid != "drop") %>%
#   group_by(study, condition) %>%
#   summarize(N = length(subid))
# $ study          : chr w/ 3 levels --> Study1, Study2, Study3
# $ title          : chr w/ 3 levels --> Name/Theme of the Study
# $ condition      : chr w/ 12 levels --> Name of the condition i.e. experimental manipulation
# $ cond           : chr w/ 12 levels --> Name of the condition in short form
# $ subid          : chr w/ 364 levels --> Subjet ID
# $ sex            : chr w/ 2 levels "0","1": --> Participants' sex; 1 = male
# $ agey           : num [1:7146] total age in years
# $ agem           : num [1:7146] total age in months
# $ aged           : num [1:7146] total age in days
# $ valid          : chr w/ 3 levels --> Status of Participants
# "valid"= main sample
# "drop" = excluded participants
# "oversampling" = data collected after reaching the minimum of 96 participants per study
# $ drop           : chr w/ 7 levels "fail_in_fam",..: --> Reasons for Participant exclusions
# fail_in_fam  --> did not meet criterion in familiarisation phase
# fussy_child  --> child was fussy or uncooperative, lost interest in participating
# language     --> child did not understand instructions due to not speaking German fluently enough
# oversampling --> Not a drop per se: participants tested after reaching minimum of participants
# quit_early   --> Children that quit early and did not contribute at least 8 test trials
# technical    --> technical problems; i.e. script for presenting experiment crashed
# $ trial          : chr w/ 17 levels NUmbers 1-16 for test trials; "fam" for familiarisation trials
# $ correct        : int [1:7146] correct choice = 1; incorrect = 0
# $ rt             : int [1:7146] reaction time in ms
# $ experimenter   : chr w/ 6 levels --> ID of the experimenter; E1 - E6
# $ where          : chr w/ 4 levels
# afterschoolcenter --> after school care; testing in the early afternoon
# daycare --> testing in kindergartens, prior to lunch
# home --> testing during visits at home; usually in the afternoon
# lab --> children were tested when visiting the lab; usually in the afternoon
# $ eselectfam     : chr w/ 2 levels "0","1"
# experimenter occasionally selected choices based on child's pointing during familiarisation traisl
# $ eselectmain    : chr w/ 2 levels "0","1"
# experimenter occasionally selected choices based on child's pointing during test trails
# $ leftObject     : chr w/ 99 levels "abpo_tar_1_A.png"
# --> stimulus item displayed on the left side of the screen as target/distractor
# $ rightObject    : chr w/ 99 levels "abpo_tar_1_A.png"
# --> stimulus item displayed on the right side of the screen as target/distractor
# $ cue            : chr w/ 98 levels "abpo_cue_1_A.png"
# --> stimulus item displayed in the middle of the screen as a cue
# $ target_position: chr w/ 2 levels "left","right":
# side on which the target (i.e. correct choice) was presented
# $ item           : chr w/ 4 levels "1","2","3","4":
# number of stimulus item in the respective condition
# $ target_shape   : chr w/ 2 levels "A","B":
# target stimulus shape in the respective condition
# $ pick           : chr w/ 2 levels "
# side of children's choice (left/right)
#library(scales)
# required for rounding pvalues, is part of tidyverse but needs to be loaded again? ## it occurs when functions are overwritten multiple times
rep.s2.freq <- rep.S2.bayes.data %>%
mutate(Age = paste0(agey, "-year-olds"),
Condition = condition) %>%
group_by(Condition, Age, subid) %>%
summarise("correct" = mean(correct),
"trials" = n()) %>%
ungroup() %>%
group_by(Condition, Age) %>%
summarise(N = n_distinct(subid),
trials = sum(trials),
"trials/N" = round(sum(trials)/n_distinct(subid), 2),
"M" = round(mean(correct)*100, 2),
"SD" = round(sd(correct)*100, 2),
p = pvalue(t.test((correct), mu = 0.5)$p.value, accuracy = .001),
df= t.test((correct), mu = 0.5)$parameter,
"t(N-1)" = round(t.test((correct), mu = 0.5)$statistic, 2),
d = round(cohensD((correct), mu = 0.5), 2))
# # delete duplicate labels in age by turning age into character and replacing duplicates
rep.s2.freq$Condition <- as.character(rep.s2.freq$Condition)
rep.s2.freq$Condition[duplicated(rep.s2.freq$Condition)] <- ""
# kable(rep.s1.freq) %>%
# kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
apa_table(
rep.s2.freq
, caption = "Descriptive Statistics for Study 1"
, note = "This table was created by Gregor."
, escape = TRUE
)
#library(scales)
# required for rounding pvalues, is part of tidyverse but needs to be loaded again? ## it occurs when functions are overwritten multiple times
rep.s2.freq <- rep.S2.bayes.data %>%
mutate(Age = paste0(agey, "-year-olds"),
Condition = condition) %>%
group_by(Condition, Age, subid) %>%
summarise("correct" = mean(correct),
"trials" = n()) %>%
ungroup() %>%
group_by(Condition, Age) %>%
summarise(N = n_distinct(subid),
trials = sum(trials),
"trials/N" = round(sum(trials)/n_distinct(subid), 2),
"M" = round(mean(correct)*100, 2),
"SD" = round(sd(correct)*100, 2),
p = pvalue(t.test((correct), mu = 0.5)$p.value, accuracy = .001),
df= t.test((correct), mu = 0.5)$parameter,
"t(N-1)" = round(t.test((correct), mu = 0.5)$statistic, 2),
d = round(cohensD((correct), mu = 0.5), 2))
# # delete duplicate labels in age by turning age into character and replacing duplicates
rep.s2.freq$Condition <- as.character(rep.s2.freq$Condition)
rep.s2.freq$Condition[duplicated(rep.s2.freq$Condition)] <- ""
# kable(rep.s1.freq) %>%
# kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
apa_table(
rep.s2.freq
, caption = "Descriptive Statistics for Study 2"
, note = "This table was created by Gregor."
, escape = TRUE
)
#library(scales)
# required for rounding pvalues, is part of tidyverse but needs to be loaded again? ## it occurs when functions are overwritten multiple times
rep.s3.freq <- rep.S3.bayes.data %>%
mutate(Age = paste0(agey, "-year-olds"),
Condition = condition) %>%
group_by(Condition, Age, subid) %>%
summarise("correct" = mean(correct),
"trials" = n()) %>%
ungroup() %>%
group_by(Condition, Age) %>%
summarise(N = n_distinct(subid),
trials = sum(trials),
"trials/N" = round(sum(trials)/n_distinct(subid), 2),
"M" = round(mean(correct)*100, 2),
"SD" = round(sd(correct)*100, 2),
p = pvalue(t.test((correct), mu = 0.5)$p.value, accuracy = .001),
df= t.test((correct), mu = 0.5)$parameter,
"t(N-1)" = round(t.test((correct), mu = 0.5)$statistic, 2),
d = round(cohensD((correct), mu = 0.5), 2))
# # delete duplicate labels in age by turning age into character and replacing duplicates
rep.s3.freq$Condition <- as.character(rep.s3.freq$Condition)
rep.s3.freq$Condition[duplicated(rep.s3.freq$Condition)] <- ""
# kable(rep.s1.freq) %>%
# kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
apa_table(
rep.s3.freq
, caption = "Descriptive Statistics for Study 3"
, note = "This table was created by Gregor."
, escape = TRUE
)
