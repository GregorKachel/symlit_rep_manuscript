y = "Estimated Deviation from Overall Intercept (log-odds)",
color = "Condition"
) +
theme_minimal() +
theme(
legend.position = "none",
strip.text = element_text(size = 12, face = "bold"))
item.plot
# CUE
# summary(S1.item.model)
cue_effects <- ranef(S1.cue.model)$cue
# Extract random intercepts
cue_intercepts <- as_tibble(cue_effects[, , "Intercept"], rownames = "cue") %>%
rename(
estimate = Estimate,
lower = Q2.5,
upper = Q97.5) %>%
mutate(condition = substr(cue,1,4))
cue.plot <- ggplot(cue_intercepts, aes(x = reorder(cue, estimate), y = estimate, color = condition)) +
geom_point() +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.2) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray50") +
coord_flip() +
facet_wrap(~ condition, scales = "free_y") +
labs(
title = "Cue-Level Random Intercepts by Condition",
x = "Cue",
y = "Estimated Deviation from Overall Intercept (log-odds)",
color = "Condition"
) +
theme_minimal() +
theme(
legend.position = "none",  # Remove if you want a legend
strip.text = element_text(size = 12, face = "bold")
)
# summary(S1.item.model)
item_effects <- ranef(S1.item.model)$item
# Extract random intercepts
item_intercepts <- as_tibble(item_effects[, , "Intercept"], rownames = "item") %>%
rename(
estimate = Estimate,
lower = Q2.5,
upper = Q97.5) %>%
mutate(condition = substr(item,1,4))
item.plot <- ggplot(item_intercepts, aes(x = reorder(item, estimate), y = estimate, color = condition)) +
geom_point() +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.2) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray50") +
coord_flip() +
facet_wrap(~ condition, scales = "free_y") +
labs(
title = "Item-Level Random Intercepts by Condition",
x = "Item",
y = "Estimated Deviation from Overall Intercept (log-odds)",
color = "Condition"
) +
theme_minimal() +
theme(
legend.position = "none",
strip.text = element_text(size = 12, face = "bold"))
cue.plot
item.plot
cue.plot + item.plot + plot_layout(ncol = 2)
combined_plot <- cue.plot + item.plot + plot_layout(ncol = 2)
library(patchwork)
combined_plot <- cue.plot + item.plot + plot_layout(ncol = 2)
# Display it
combined_plot
# CUE
# summary(S1.item.model)
cue_effects <- ranef(S1.cue.model)$cue
# Extract random intercepts
cue_intercepts <- as_tibble(cue_effects[, , "Intercept"], rownames = "cue") %>%
rename(
estimate = Estimate,
lower = Q2.5,
upper = Q97.5) %>%
mutate(condition = substr(cue,1,4))
cue.plot <- ggplot(cue_intercepts, aes(x = reorder(cue, estimate), y = estimate, color = condition)) +
geom_point() +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.2) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray50") +
coord_flip() +
facet_wrap(~ condition, scales = "free_y") +
labs(
title = "Cue-Level Random Intercepts by Condition",
x = "Cue",
y = "Estimated Deviation from Overall Intercept (log-odds)",
color = "Condition"
) +
theme_minimal() +
theme(
legend.position = "none",  # Remove if you want a legend
strip.text = element_text(size = 12, face = "bold")
)
# summary(S1.item.model)
item_effects <- ranef(S1.item.model)$item
# Extract random intercepts
item_intercepts <- as_tibble(item_effects[, , "Intercept"], rownames = "item") %>%
rename(
estimate = Estimate,
lower = Q2.5,
upper = Q97.5) %>%
mutate(condition = substr(item,1,4))
item.plot <- ggplot(item_intercepts, aes(x = reorder(item, estimate), y = estimate, color = condition)) +
geom_point() +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.2) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray50") +
coord_flip() +
facet_wrap(~ condition, scales = "free_y") +
labs(
title = "Item-Level Random Intercepts by Condition",
x = "Item",
y = "Estimated Deviation from Overall Intercept (log-odds)",
color = "Condition"
) +
theme_minimal() +
theme(
legend.position = "none",
strip.text = element_text(size = 12, face = "bold"))
cue.plot
item.plot
library(patchwork)
combined_plot <- cue.plot + item.plot + plot_layout(ncol = 2)
# Display it
combined_plot
item.plot <- ggplot(item_intercepts, aes(x = reorder(item, estimate), y = estimate, color = condition)) +
geom_point() +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.2) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray50") +
coord_flip() +
facet_wrap(~ condition, scales = "free_y", nrow = 1) +
labs(
title = "Item-Level Random Intercepts by Condition",
x = "Item",
y = "Estimated Deviation from Overall Intercept (log-odds)",
color = "Condition"
) +
theme_minimal() +
theme(
legend.position = "none",
strip.text = element_text(size = 12, face = "bold"))
item.plot
item.plot <- ggplot(item_intercepts, aes(x = reorder(item, estimate), y = estimate, color = condition)) +
geom_point() +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.2) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray50") +
coord_flip() +
facet_wrap(~ condition, scales = "free_y", ncol = 1) +
labs(
title = "Item-Level Random Intercepts by Condition",
x = "Item",
y = "Estimated Deviation from Overall Intercept (log-odds)",
color = "Condition"
) +
theme_minimal() +
theme(
legend.position = "none",
strip.text = element_text(size = 12, face = "bold"))
item.plot
item.plot
library(patchwork)
# CUE
# summary(S1.item.model)
cue_effects <- ranef(S1.cue.model)$cue
# Extract random intercepts
cue_intercepts <- as_tibble(cue_effects[, , "Intercept"], rownames = "cue") %>%
rename(
estimate = Estimate,
lower = Q2.5,
upper = Q97.5) %>%
mutate(condition = substr(cue,1,4))
cue.plot <- ggplot(cue_intercepts, aes(x = reorder(cue, estimate), y = estimate, color = condition)) +
geom_point() +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.2) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray50") +
coord_flip() +
facet_wrap(~ condition, scales = "free_y", ncol = 1) +
labs(
title = "Cue-Level Random Intercepts by Condition",
x = "Cue",
y = "Estimated Deviation from Overall Intercept (log-odds)",
color = "Condition"
) +
theme_minimal() +
theme(
legend.position = "none",  # Remove if you want a legend
strip.text = element_text(size = 12, face = "bold")
)
# summary(S1.item.model)
item_effects <- ranef(S1.item.model)$item
# Extract random intercepts
item_intercepts <- as_tibble(item_effects[, , "Intercept"], rownames = "item") %>%
rename(
estimate = Estimate,
lower = Q2.5,
upper = Q97.5) %>%
mutate(condition = substr(item,1,4))
item.plot <- ggplot(item_intercepts, aes(x = reorder(item, estimate), y = estimate, color = condition)) +
geom_point() +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.2) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray50") +
coord_flip() +
facet_wrap(~ condition, scales = "free_y", ncol = 1) +
labs(
title = "Item-Level Random Intercepts by Condition",
x = "Item",
y = "Estimated Deviation from Overall Intercept (log-odds)",
color = "Condition"
) +
theme_minimal() +
theme(
legend.position = "none",
strip.text = element_text(size = 12, face = "bold"))
# cue.plot
# item.plot
library(patchwork)
combined_plot <- cue.plot + item.plot + plot_layout(ncol = 2)
combined_plot
combined_plot
combined_plot
# CUE
# summary(S1.item.model)
cue_effects <- ranef(S1.cue.model)$cue
# Extract random intercepts
cue_intercepts <- as_tibble(cue_effects[, , "Intercept"], rownames = "cue") %>%
rename(
estimate = Estimate,
lower = Q2.5,
upper = Q97.5) %>%
mutate(condition = substr(cue,1,4))
cue.plot <- ggplot(cue_intercepts, aes(x = reorder(cue, estimate), y = estimate, color = condition)) +
geom_point() +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.2) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray50") +
coord_flip() +
facet_wrap(~ condition, scales = "free_y", nrow = 1) +
labs(
title = "Cue-Level Random Intercepts by Condition",
x = "Cue",
y = "Estimated Deviation from Overall Intercept (log-odds)",
color = "Condition"
) +
theme_minimal() +
theme(
legend.position = "none",  # Remove if you want a legend
strip.text = element_text(size = 12, face = "bold")
)
# summary(S1.item.model)
item_effects <- ranef(S1.item.model)$item
# Extract random intercepts
item_intercepts <- as_tibble(item_effects[, , "Intercept"], rownames = "item") %>%
rename(
estimate = Estimate,
lower = Q2.5,
upper = Q97.5) %>%
mutate(condition = substr(item,1,4))
item.plot <- ggplot(item_intercepts, aes(x = reorder(item, estimate), y = estimate, color = condition)) +
geom_point() +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.2) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray50") +
coord_flip() +
facet_wrap(~ condition, scales = "free_y", nrow = 1) +
labs(
title = "Item-Level Random Intercepts by Condition",
x = "Item",
y = "Estimated Deviation from Overall Intercept (log-odds)",
color = "Condition"
) +
theme_minimal() +
theme(
legend.position = "none",
strip.text = element_text(size = 12, face = "bold"))
# cue.plot
# item.plot
library(patchwork)
combined_plot <- cue.plot + item.plot + plot_layout(nrow = 2)
combined_plot
combined_plot
combined_plot
# CUE
# summary(S1.item.model)
cue_effects <- ranef(S1.cue.model)$cue
# Extract random intercepts
cue_intercepts <- as_tibble(cue_effects[, , "Intercept"], rownames = "cue") %>%
rename(
estimate = Estimate,
lower = Q2.5,
upper = Q97.5) %>%
mutate(condition = substr(cue,1,4))
cue.plot <- ggplot(cue_intercepts, aes(x = reorder(cue, estimate), y = estimate, color = condition)) +
geom_point() +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.2) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray50") +
coord_flip() +
facet_wrap(~ condition, scales = "free_y", ncol = 1) +
labs(
title = "Cue-Level Random Intercepts by Condition",
x = "Cue",
y = "Estimated Deviation from Overall Intercept (log-odds)",
color = "Condition"
) +
theme_minimal() +
theme(
legend.position = "none",  # Remove if you want a legend
strip.text = element_text(size = 12, face = "bold")
)
# summary(S1.item.model)
item_effects <- ranef(S1.item.model)$item
# Extract random intercepts
item_intercepts <- as_tibble(item_effects[, , "Intercept"], rownames = "item") %>%
rename(
estimate = Estimate,
lower = Q2.5,
upper = Q97.5) %>%
mutate(condition = substr(item,1,4))
item.plot <- ggplot(item_intercepts, aes(x = reorder(item, estimate), y = estimate, color = condition)) +
geom_point() +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.2) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray50") +
coord_flip() +
facet_wrap(~ condition, scales = "free_y", ncol = 1) +
labs(
title = "Item-Level Random Intercepts by Condition",
x = "Item",
y = "Estimated Deviation from Overall Intercept (log-odds)",
color = "Condition"
) +
theme_minimal() +
theme(
legend.position = "none",
strip.text = element_text(size = 12, face = "bold"))
# cue.plot
# item.plot
library(patchwork)
combined_plot <- cue.plot + item.plot + plot_layout(ncol = 2)
combined_plot
# CUE
# summary(S1.item.model)
cue_effects <- ranef(S1.cue.model)$cue
# Extract random intercepts
cue_intercepts <- as_tibble(cue_effects[, , "Intercept"], rownames = "cue") %>%
rename(
estimate = Estimate,
lower = Q2.5,
upper = Q97.5) %>%
mutate(condition = substr(cue,1,4))
cue.plot <- ggplot(cue_intercepts, aes(x = reorder(cue, estimate), y = estimate, color = condition)) +
geom_point() +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.2) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray50") +
coord_flip() +
facet_wrap(~ condition, scales = "fixed", ncol = 1) +
labs(
title = "Cue-Level Random Intercepts by Condition",
x = "Cue",
y = "Estimated Deviation from Overall Intercept (log-odds)",
color = "Condition"
) +
theme_minimal() +
theme(
legend.position = "none",  # Remove if you want a legend
strip.text = element_text(size = 12, face = "bold")
)
# summary(S1.item.model)
item_effects <- ranef(S1.item.model)$item
# Extract random intercepts
item_intercepts <- as_tibble(item_effects[, , "Intercept"], rownames = "item") %>%
rename(
estimate = Estimate,
lower = Q2.5,
upper = Q97.5) %>%
mutate(condition = substr(item,1,4))
item.plot <- ggplot(item_intercepts, aes(x = reorder(item, estimate), y = estimate, color = condition)) +
geom_point() +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.2) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray50") +
coord_flip() +
facet_wrap(~ condition, scales = "fixed", ncol = 1) +
labs(
title = "Item-Level Random Intercepts by Condition",
x = "Item",
y = "Estimated Deviation from Overall Intercept (log-odds)",
color = "Condition"
) +
theme_minimal() +
theme(
legend.position = "none",
strip.text = element_text(size = 12, face = "bold"))
# cue.plot
# item.plot
library(patchwork)
combined_plot <- cue.plot + item.plot + plot_layout(ncol = 2)
combined_plot
combined_plot
scales = "fixed"
combined_plot
# CUE
# summary(S1.item.model)
cue_effects <- ranef(S1.cue.model)$cue
# Extract random intercepts
cue_intercepts <- as_tibble(cue_effects[, , "Intercept"], rownames = "cue") %>%
rename(
estimate = Estimate,
lower = Q2.5,
upper = Q97.5) %>%
mutate(condition = substr(cue,1,4))
cue.plot <- ggplot(cue_intercepts, aes(x = reorder(cue, estimate), y = estimate, color = condition)) +
geom_point() +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.2) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray50") +
coord_flip() +
facet_wrap(~ condition, scales = "free_y", ncol = 1) +
labs(
title = "Cue-Level Random Intercepts by Condition",
x = "Cue",
y = "Estimated Deviation from Overall Intercept (log-odds)",
color = "Condition"
) +
theme_minimal() +
theme(
legend.position = "none",  # Remove if you want a legend
strip.text = element_text(size = 12, face = "bold")
)
# summary(S1.item.model)
item_effects <- ranef(S1.item.model)$item
# Extract random intercepts
item_intercepts <- as_tibble(item_effects[, , "Intercept"], rownames = "item") %>%
rename(
estimate = Estimate,
lower = Q2.5,
upper = Q97.5) %>%
mutate(condition = substr(item,1,4))
item.plot <- ggplot(item_intercepts, aes(x = reorder(item, estimate), y = estimate, color = condition)) +
geom_point() +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.2) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray50") +
coord_flip() +
facet_wrap(~ condition, scales = "free_y", ncol = 1) +
labs(
title = "Item-Level Random Intercepts by Condition",
x = "Item",
y = "Estimated Deviation from Overall Intercept (log-odds)",
color = "Condition"
) +
theme_minimal() +
theme(
legend.position = "none",
strip.text = element_text(size = 12, face = "bold"))
# cue.plot
# item.plot
library(patchwork)
combined_plot <- cue.plot + item.plot + plot_layout(ncol = 2)
combined_plot
combined_plot
# CUE
# summary(S1.item.model)
cue_effects <- ranef(S1.cue.model)$cue
# Extract random intercepts
cue_intercepts <- as_tibble(cue_effects[, , "Intercept"], rownames = "cue") %>%
rename(
estimate = Estimate,
lower = Q2.5,
upper = Q97.5) %>%
mutate(condition = substr(cue,1,4))
cue.plot <- ggplot(cue_intercepts, aes(x = reorder(cue, estimate), y = estimate, color = condition)) +
geom_point() +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.2) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray50") +
coord_flip() +
facet_wrap(~ condition, scales = "free_y", ncol = 1) +
labs(
title = "Cue-Level Random Intercepts by Condition",
x = "Cue",
y = "Estimated Deviation from Overall Intercept (log-odds)",
color = "Condition"
) +
theme_minimal() +
theme(
legend.position = "none",  # Remove if you want a legend
strip.text = element_text(size = 12, face = "bold")
)
# summary(S1.item.model)
item_effects <- ranef(S1.item.model)$item
# Extract random intercepts
item_intercepts <- as_tibble(item_effects[, , "Intercept"], rownames = "item") %>%
rename(
estimate = Estimate,
lower = Q2.5,
upper = Q97.5) %>%
mutate(condition = substr(item,1,4))
item.plot <- ggplot(item_intercepts, aes(x = reorder(item, estimate), y = estimate, color = condition)) +
geom_point() +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.2) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray50") +
coord_flip() +
facet_wrap(~ condition, scales = "free_y", ncol = 1) +
labs(
title = "Item-Level Random Intercepts by Condition",
x = "Item",
y = "Estimated Deviation from Overall Intercept (log-odds)",
color = "Condition"
) +
theme_minimal() +
theme(
legend.position = "none",
strip.text = element_text(size = 12, face = "bold"))
# cue.plot
# item.plot
library(patchwork)
combined_plot <- cue.plot + item.plot + plot_layout(ncol = 2)
combined_plot
