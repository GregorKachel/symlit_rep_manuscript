mutate(variable = gsub("z.age", "Age*", variable)) %>%
mutate(variable = gsub("z.trial", "Trial*", variable)) %>%
mutate(variable = gsub("sex1", "Sex (Male)", variable)) %>%
mutate(
variable = gsub("sd_item__ Intercept", "Item Intercept (SD)", variable),
variable = gsub("sd_item__Age\\*", "Item × Age Slope (SD)", variable),
variable = gsub("sd_subid__ Intercept", "Subject Intercept (SD)", variable),
variable = gsub("sd_subid__Trial\\*", "Subject × Trial slope (SD)", variable),
variable = gsub("cor_item__ Intercept__Age\\*", "Correlation: Item Intercept & Age Slope", variable),
variable = gsub("cor_subid__ Intercept__Trial\\*", "Correlation: Subject Intercept & Trial Slope", variable)) %>%
rename(
Predictor = variable,
Estimate = mean,
SD = sd,
MAD = mad,
`2.5% CrI` = q2.5,
`97.5% CrI` = q97.5,
`Bulk ESS` = ess_bulk,
`Tail ESS` = ess_tail) %>%
mutate(
`95% CrI` = paste0("[", sprintf("%.2f", `2.5% CrI`), ", ", sprintf("%.2f", `97.5% CrI`), "]"),
`Bulk ESS` = format(round(`Bulk ESS`), big.mark = ","),
`Tail ESS` = format(round(`Tail ESS`), big.mark = ",")) %>%
select(Predictor, Estimate, SD, MAD, `95% CrI`, `Bulk ESS`, `Tail ESS`)
# add line to highlight the random effects section
S2.item.coef.table.fin <- bind_rows(
S2.item.coef.table.fin[1:10, ],
tibble(
Predictor = "Random Effects",
Estimate = NA_real_,
SD = NA_real_,
MAD = NA_real_,
`95% CrI` = "",
`Bulk ESS` = "",
`Tail ESS` = ""
),
S2.item.coef.table.fin[11:16, ]
)
ft <- flextable(S2.item.coef.table.fin) %>%
theme_apa() %>%
set_caption("suppl-S2-item-table") %>%
fontsize(size = 8, part = "all") %>%
set_table_properties(layout = "autofit") %>%
add_footer_lines(values = "Note. Estimates represent posterior means with 95% equal-tailed credible intervals (CrIs). MAD indicates Median Absolute Deviation. ESS refers to effective sample size. R̂ values omitted as they are all ~1 indicating convergence.  * = variables were standardized.") %>%
fontsize(part = "footer", size = 8) %>%
bold(i = ~ Predictor == "Random effects", bold = TRUE, part = "body") %>%
merge_h(i = ~ Predictor == "Random effects") %>% # merge across columns
autofit()
ft
S2.item.coef.table.fin <- S2.item.coef.table %>%
slice(1:16) %>%
# filter(grepl("^b_", variable)) %>%
mutate(variable = gsub("b_", "", variable)) %>%
mutate(variable = gsub("condition", "", variable)) %>%
mutate(variable = gsub("([^ ])([A-Z])", "\\1 \\2", variable)) %>%
mutate(variable = gsub("of", " of", variable)) %>%
mutate(variable = gsub(":", " × ", variable)) %>%
mutate(variable = gsub("z.age", "Age*", variable)) %>%
mutate(variable = gsub("z.trial", "Trial*", variable)) %>%
mutate(variable = gsub("sex1", "Sex (Male)", variable)) %>%
mutate(
variable = gsub("sd_item__ Intercept", "Item Intercept (SD)", variable),
variable = gsub("sd_item__Age\\*", "Item × Age Slope (SD)", variable),
variable = gsub("sd_subid__ Intercept", "Subject Intercept (SD)", variable),
variable = gsub("sd_subid__Trial\\*", "Subject × Trial slope (SD)", variable),
variable = gsub("cor_item__ Intercept__Age\\*", "Correlation: Item Intercept & Age Slope", variable),
variable = gsub("cor_subid__ Intercept__Trial\\*", "Correlation: Subject Intercept & Trial Slope", variable)) %>%
rename(
Predictor = variable,
Estimate = mean,
SD = sd,
MAD = mad,
`2.5% CrI` = q2.5,
`97.5% CrI` = q97.5,
`Bulk ESS` = ess_bulk,
`Tail ESS` = ess_tail) %>%
mutate(
`95% CrI` = paste0("[", sprintf("%.2f", `2.5% CrI`), ", ", sprintf("%.2f", `97.5% CrI`), "]"),
`Bulk ESS` = format(round(`Bulk ESS`), big.mark = ","),
`Tail ESS` = format(round(`Tail ESS`), big.mark = ",")) %>%
select(Predictor, Estimate, SD, MAD, `95% CrI`, `Bulk ESS`, `Tail ESS`)
# add line to highlight the random effects section
S2.item.coef.table.fin <- bind_rows(
S2.item.coef.table.fin[1:10, ],
tibble(
Predictor = "Random Effects",
Estimate = NA_real_,
SD = NA_real_,
MAD = NA_real_,
`95% CrI` = "",
`Bulk ESS` = "",
`Tail ESS` = ""
),
S2.item.coef.table.fin[11:16, ]
)
ft <- flextable(S2.item.coef.table.fin) %>%
theme_apa() %>%
set_caption("suppl-S2-item-table") %>%
fontsize(size = 8, part = "all") %>%
set_table_properties(layout = "autofit") %>%
add_footer_lines(values = "Note. Estimates represent posterior means with 95% equal-tailed credible intervals (CrIs). MAD indicates Median Absolute Deviation. ESS refers to effective sample size. R̂ values omitted as they are all ~1 indicating convergence.  * = variables were standardized.") %>%
fontsize(part = "footer", size = 8) %>%
bold(i = ~ Predictor == "Random effects", bold = TRUE, part = "body") %>%
merge_h(i = ~ Predictor == "Random effects") %>% # merge across columns
autofit()
ft
S2.item.coef.table.fin <- S2.item.coef.table %>%
slice(1:16) %>%
# filter(grepl("^b_", variable)) %>%
mutate(variable = gsub("b_", "", variable)) %>%
mutate(variable = gsub("condition", "", variable)) %>%
mutate(variable = gsub("([^ ])([A-Z])", "\\1 \\2", variable)) %>%
mutate(variable = gsub("of", " of", variable)) %>%
mutate(variable = gsub(":", " × ", variable)) %>%
mutate(variable = gsub("z.age", "Age*", variable)) %>%
mutate(variable = gsub("z.trial", "Trial*", variable)) %>%
mutate(variable = gsub("sex1", "Sex (Male)", variable)) %>%
mutate(
variable = gsub("sd_item__ Intercept", "Item Intercept (SD)", variable),
variable = gsub("sd_item__Age\\*", "Item × Age Slope (SD)", variable),
variable = gsub("sd_subid__ Intercept", "Subject Intercept (SD)", variable),
variable = gsub("sd_subid__Trial\\*", "Subject × Trial slope (SD)", variable),
variable = gsub("cor_item__ Intercept__Age\\*", "Correlation: Item Intercept & Age Slope", variable),
variable = gsub("cor_subid__ Intercept__Trial\\*", "Correlation: Subject Intercept & Trial Slope", variable)) %>%
rename(
Predictor = variable,
Estimate = mean,
SD = sd,
MAD = mad,
`2.5% CrI` = q2.5,
`97.5% CrI` = q97.5,
`Bulk ESS` = ess_bulk,
`Tail ESS` = ess_tail) %>%
mutate(
`95% CrI` = paste0("[", sprintf("%.2f", `2.5% CrI`), ", ", sprintf("%.2f", `97.5% CrI`), "]"),
`Bulk ESS` = format(round(`Bulk ESS`), big.mark = ","),
`Tail ESS` = format(round(`Tail ESS`), big.mark = ",")) %>%
select(Predictor, Estimate, SD, MAD, `95% CrI`, `Bulk ESS`, `Tail ESS`)
# add line to highlight the random effects section
S2.item.coef.table.fin <- bind_rows(
S2.item.coef.table.fin[1:10, ],
tibble(
Predictor = "Random Effects",
Estimate = NA_real_,
SD = NA_real_,
MAD = NA_real_,
`95% CrI` = "",
`Bulk ESS` = "",
`Tail ESS` = ""
),
S2.item.coef.table.fin[11:16, ]
)
ft <- flextable(S2.item.coef.table.fin) %>%
theme_apa() %>%
set_caption("suppl-S2-item-table") %>%
fontsize(size = 8, part = "all") %>%
set_table_properties(layout = "autofit") %>%
add_footer_lines(values = "Note. Estimates represent posterior means with 95% equal-tailed credible intervals (CrIs). MAD indicates Median Absolute Deviation. ESS refers to effective sample size. R̂ values omitted as they are all ~1 indicating convergence.  * = variables were standardized.") %>%
fontsize(part = "footer", size = 8) %>%
bold(i = ~ Predictor == "Random effects", bold = TRUE, part = "body") %>%
merge_h(i = ~ Predictor == "Random effects") %>% # merge across columns
autofit()
ft
S3.item.coef.table.fin <- S3.item.coef.table %>%
slice(1:16) %>%
# filter(grepl("^b_", variable)) %>%
mutate(variable = gsub("b_", "", variable)) %>%
mutate(variable = gsub("condition", "", variable)) %>%
mutate(variable = gsub("([^ ])([A-Z])", "\\1 \\2", variable)) %>%
mutate(variable = gsub("of", " of", variable)) %>%
mutate(variable = gsub(":", " × ", variable)) %>%
mutate(variable = gsub("z.age", "Age*", variable)) %>%
mutate(variable = gsub("z.trial", "Trial*", variable)) %>%
mutate(variable = gsub("sex1", "Sex (Male)", variable)) %>%
mutate(
variable = gsub("sd_item__ Intercept", "Item Intercept (SD)", variable),
variable = gsub("sd_item__Age\\*", "Item × Age Slope (SD)", variable),
variable = gsub("sd_subid__ Intercept", "Subject Intercept (SD)", variable),
variable = gsub("sd_subid__Trial\\*", "Subject × Trial slope (SD)", variable),
variable = gsub("cor_item__ Intercept__Age\\*", "Correlation: Item Intercept & Age Slope", variable),
variable = gsub("cor_subid__ Intercept__Trial\\*", "Correlation: Subject Intercept & Trial Slope", variable)) %>%
rename(
Predictor = variable,
Estimate = mean,
SD = sd,
MAD = mad,
`2.5% CrI` = q2.5,
`97.5% CrI` = q97.5,
`Bulk ESS` = ess_bulk,
`Tail ESS` = ess_tail) %>%
mutate(
`95% CrI` = paste0("[", sprintf("%.2f", `2.5% CrI`), ", ", sprintf("%.2f", `97.5% CrI`), "]"),
`Bulk ESS` = format(round(`Bulk ESS`), big.mark = ","),
`Tail ESS` = format(round(`Tail ESS`), big.mark = ",")) %>%
select(Predictor, Estimate, SD, MAD, `95% CrI`, `Bulk ESS`, `Tail ESS`)
# add line to highlight the random effects section
S3.item.coef.table.fin <- bind_rows(
S3.item.coef.table.fin[1:10, ],
tibble(
Predictor = "Random Effects",
Estimate = NA_real_,
SD = NA_real_,
MAD = NA_real_,
`95% CrI` = "",
`Bulk ESS` = "",
`Tail ESS` = ""
),
S3.item.coef.table.fin[11:16, ]
)
ft <- flextable(S3.item.coef.table.fin) %>%
theme_apa() %>%
set_caption("suppl-S3-item-table") %>%
fontsize(size = 8, part = "all") %>%
set_table_properties(layout = "autofit") %>%
add_footer_lines(values = "Note. Estimates represent posterior means with 95% equal-tailed credible intervals (CrIs). MAD indicates Median Absolute Deviation. ESS refers to effective sample size. R̂ values omitted as they are all ~1 indicating convergence.  * = variables were standardized.") %>%
fontsize(part = "footer", size = 8) %>%
bold(i = ~ Predictor == "Random effects", bold = TRUE, part = "body") %>%
merge_h(i = ~ Predictor == "Random effects") %>% # merge across columns
autofit()
ft
# STUDY 1 - item vs full
S1.itemvsfull.comp <- loo_compare(S1.item.model, S1.full.bm,
criterion = "waic")%>%as_tibble(rownames = "index")
S1.itemvsfull.comp  <- data.frame(S1.itemvsfull.comp , row.names = "index")
S1.itemvsfull.weights <- model_weights(S1.item.model, S1.full.bm, criterion = "waic")
S1.itemvsfull.weights <- model_weights(S1.item.model, S1.full.bm, criterion = "waic")
S1.itemvsfull.weights <- S1.itemvsfull.weights %>% as_tibble(rownames = "index")
S1.itemvsfull.weights <- data.frame(S1.itemvsfull.weights, row.names = "index")
saveRDS(S1.itemvsfull.comp, "../models/S1.itemvsfull.comp.rds")
saveRDS(S1.itemvsfull.weights, "../models/S1.itemvsfull.weights.rds")
S1.item.model <- readRDS("../models/S1.item.model.rds")
S1.itemvsfull.comp <- readRDS("../models/S1.itemvsfull.comp.rds")
S1.itemvsfull.weights <- readRDS("../models/S1.itemvsfull.weights.rds")
S1.item.model <- readRDS("../models/S1.item.model.rds")
S1.itemvsfull.comp <- readRDS("../models/S1.itemvsfull.comp.rds")
S1.itemvsfull.weights <- readRDS("../models/S1.itemvsfull.weights.rds")
View(S1.itemvsfull.comp)
View(S1.itemvsfull.weights)
View(S1.item.model)
round(S1.itemvsfull.weights["S1.item.model","value"]*100,2)
round(S1.itemvsfull.comp["S1.item.model", "elpd_diff"],2)
View(S1.item.coef)
View(S1.item.coef.table)
View(S1.item.coef.table.fin)
View(S1.item.coef)
S1.item.coef["cor_item__Intercept__z.age", "q2.5"]
S1.item.coef <- S1.item.coef %>%
filter(grepl("^b_", variable)) %>%
mutate(variable = gsub("b_", "", variable)) %>%
mutate(variable = gsub("condition", "", variable)) %>%
data.frame(row.names = "variable")
S1.item.coef
S1.item.coef
S1.item.model <- readRDS("../models/S1.item.model.rds")
S1.itemvsfull.comp <- readRDS("../models/S1.itemvsfull.comp.rds")
S1.itemvsfull.weights <- readRDS("../models/S1.itemvsfull.weights.rds")
S2.item.model <- readRDS("../models/S2.item.model.rds")
S3.item.model <- readRDS("../models/S3.item.model.rds")
# POSTERIOR PREDICTICE CHECKS ###################
# pp_check(S1.item.model)
# pp_check(S1.item.model, type = "bars")
#
# pp_check(S2.item.model)
# pp_check(S2.item.model, type = "bars")
#
# pp_check(S3.item.model)
# pp_check(S3.item.model, type = "bars")
### inspect rhat --> always 1 --> good
### inspect Bulk_ESS --> always > 1000 --> good
#################       Estimate Est.Error l-95% CI
# summary(S1.item.model) # Intercept 2.04      0.23     1.61
# summary(S2.item.model) # Intercept 1.09      0.25     0.60
# summary(S3.item.model) # Intercept 1.06      0.21     0.64
# S1 item model prepping for text and table ####################
# for reporting BULK_ESS and Coefficients
S1.item.coef <- summarise_draws(as_draws_df(S1.item.model)) # ! standard is just 90% CrI
# NOTE: # as_draws_df() from posterior uses 90% CrIs
# we preregistered using 2.5% and 97.5% quantiles
draws_df <- as_draws_df(S1.item.model)
quantiles_df <- as.data.frame(t(apply(draws_df, 2, quantile, probs = c(0.025, 0.975))))
quantiles_df <- tibble::rownames_to_column(quantiles_df, var = "variable")
names(quantiles_df)[2:3] <- c("q2.5", "q97.5")
S1.item.coef <- left_join(S1.item.coef, quantiles_df, by = "variable")
# for table in appendix:
S1.item.coef.table <- S1.item.coef
# for reporting in text:
S1.item.coef <- S1.item.coef %>%
filter(grepl("^b_", variable)) %>%
mutate(variable = gsub("b_", "", variable)) %>%
mutate(variable = gsub("condition", "", variable)) %>%
data.frame(row.names = "variable")
# S2 item model prepping for text and table ####################
# for reporting BULK_ESS and Coefficients
S2.item.coef <- summarise_draws(as_draws_df(S2.item.model)) # ! standard is just 90% CrI
# NOTE: # as_draws_df() from posterior uses 90% CrIs
# we preregistered using 2.5% and 97.5% quantiles
draws_df <- as_draws_df(S2.item.model)
quantiles_df <- as.data.frame(t(apply(draws_df, 2, quantile, probs = c(0.025, 0.975))))
quantiles_df <- tibble::rownames_to_column(quantiles_df, var = "variable")
names(quantiles_df)[2:3] <- c("q2.5", "q97.5")
S2.item.coef <- left_join(S2.item.coef, quantiles_df, by = "variable")
# for table in appendix:
S2.item.coef.table <- S2.item.coef
# for reporting in text:
S2.item.coef <- S2.item.coef %>%
filter(grepl("^b_", variable)) %>%
mutate(variable = gsub("b_", "", variable)) %>%
mutate(variable = gsub("condition", "", variable)) %>%
data.frame(row.names = "variable")
# S3 item model prepping for text and table ####################
# for reporting BULK_ESS and Coefficients
S3.item.coef <- summarise_draws(as_draws_df(S3.item.model)) # ! standard is just 90% CrI
# NOTE: # as_draws_df() from posterior uses 90% CrIs
# we preregistered using 2.5% and 97.5% quantiles
draws_df <- as_draws_df(S3.item.model)
quantiles_df <- as.data.frame(t(apply(draws_df, 2, quantile, probs = c(0.025, 0.975))))
quantiles_df <- tibble::rownames_to_column(quantiles_df, var = "variable")
names(quantiles_df)[2:3] <- c("q2.5", "q97.5")
S3.item.coef <- left_join(S3.item.coef, quantiles_df, by = "variable")
# for table in appendix:
S3.item.coef.table <- S3.item.coef
# for reporting in text:
S3.item.coef <- S3.item.coef %>%
filter(grepl("^b_", variable)) %>%
mutate(variable = gsub("b_", "", variable)) %>%
mutate(variable = gsub("condition", "", variable)) %>%
data.frame(row.names = "variable")
S1.item.coef["sd_item__Intercept", "mean"]
S1.item.model <- readRDS("../models/S1.item.model.rds")
S1.itemvsfull.comp <- readRDS("../models/S1.itemvsfull.comp.rds")
S1.itemvsfull.weights <- readRDS("../models/S1.itemvsfull.weights.rds")
S2.item.model <- readRDS("../models/S2.item.model.rds")
S3.item.model <- readRDS("../models/S3.item.model.rds")
# POSTERIOR PREDICTICE CHECKS ###################
# pp_check(S1.item.model)
# pp_check(S1.item.model, type = "bars")
#
# pp_check(S2.item.model)
# pp_check(S2.item.model, type = "bars")
#
# pp_check(S3.item.model)
# pp_check(S3.item.model, type = "bars")
### inspect rhat --> always 1 --> good
### inspect Bulk_ESS --> always > 1000 --> good
#################       Estimate Est.Error l-95% CI
# summary(S1.item.model) # Intercept 2.04      0.23     1.61
# summary(S2.item.model) # Intercept 1.09      0.25     0.60
# summary(S3.item.model) # Intercept 1.06      0.21     0.64
# S1 item model prepping for text and table ####################
# for reporting BULK_ESS and Coefficients
S1.item.coef <- summarise_draws(as_draws_df(S1.item.model)) # ! standard is just 90% CrI
# NOTE: # as_draws_df() from posterior uses 90% CrIs
# we preregistered using 2.5% and 97.5% quantiles
draws_df <- as_draws_df(S1.item.model)
quantiles_df <- as.data.frame(t(apply(draws_df, 2, quantile, probs = c(0.025, 0.975))))
quantiles_df <- tibble::rownames_to_column(quantiles_df, var = "variable")
names(quantiles_df)[2:3] <- c("q2.5", "q97.5")
S1.item.coef <- left_join(S1.item.coef, quantiles_df, by = "variable")
# for table in appendix:
S1.item.coef.table <- S1.item.coef
# for reporting in text:
S1.item.coef <- S1.item.coef %>%
slice(1:16) %>%
mutate(variable = gsub("b_", "", variable)) %>%
mutate(variable = gsub("condition", "", variable)) %>%
data.frame(row.names = "variable")
# S2 item model prepping for text and table ####################
# for reporting BULK_ESS and Coefficients
S2.item.coef <- summarise_draws(as_draws_df(S2.item.model)) # ! standard is just 90% CrI
# NOTE: # as_draws_df() from posterior uses 90% CrIs
# we preregistered using 2.5% and 97.5% quantiles
draws_df <- as_draws_df(S2.item.model)
quantiles_df <- as.data.frame(t(apply(draws_df, 2, quantile, probs = c(0.025, 0.975))))
quantiles_df <- tibble::rownames_to_column(quantiles_df, var = "variable")
names(quantiles_df)[2:3] <- c("q2.5", "q97.5")
S2.item.coef <- left_join(S2.item.coef, quantiles_df, by = "variable")
# for table in appendix:
S2.item.coef.table <- S2.item.coef
# for reporting in text:
S2.item.coef <- S2.item.coef %>%
slice(1:16) %>%
mutate(variable = gsub("b_", "", variable)) %>%
mutate(variable = gsub("condition", "", variable)) %>%
data.frame(row.names = "variable")
# S3 item model prepping for text and table ####################
# for reporting BULK_ESS and Coefficients
S3.item.coef <- summarise_draws(as_draws_df(S3.item.model)) # ! standard is just 90% CrI
# NOTE: # as_draws_df() from posterior uses 90% CrIs
# we preregistered using 2.5% and 97.5% quantiles
draws_df <- as_draws_df(S3.item.model)
quantiles_df <- as.data.frame(t(apply(draws_df, 2, quantile, probs = c(0.025, 0.975))))
quantiles_df <- tibble::rownames_to_column(quantiles_df, var = "variable")
names(quantiles_df)[2:3] <- c("q2.5", "q97.5")
S3.item.coef <- left_join(S3.item.coef, quantiles_df, by = "variable")
# for table in appendix:
S3.item.coef.table <- S3.item.coef
# for reporting in text:
S3.item.coef <- S3.item.coef %>%
slice(1:16) %>%
mutate(variable = gsub("b_", "", variable)) %>%
mutate(variable = gsub("condition", "", variable)) %>%
data.frame(row.names = "variable")
View(S1.item.coef)
S1.item.coef["sd_item__Intercept", "q2.5"]
### MODEL COMPARISON
# STUDY 1 - item vs full #######################################
S1.itemvsfull.comp <- loo_compare(S1.item.model, S1.full.bm,
criterion = "waic")%>%as_tibble(rownames = "index")
S1.itemvsfull.comp  <- data.frame(S1.itemvsfull.comp , row.names = "index")
S1.itemvsfull.weights <- model_weights(S1.item.model, S1.full.bm, criterion = "waic")
S1.itemvsfull.weights <- S1.itemvsfull.weights %>% as_tibble(rownames = "index")
S1.itemvsfull.weights <- data.frame(S1.itemvsfull.weights, row.names = "index")
saveRDS(S1.itemvsfull.comp, "../models/S1.itemvsfull.comp.rds")
saveRDS(S1.itemvsfull.weights, "../models/S1.itemvsfull.weights.rds")
# STUDY 2 - item vs full #######################################
S2.itemvsfull.comp <- loo_compare(S2.item.model, S2.full.bm,
criterion = "waic")%>%as_tibble(rownames = "index")
S2.itemvsfull.comp  <- data.frame(S2.itemvsfull.comp , row.names = "index")
S2.itemvsfull.weights <- model_weights(S2.item.model, S2.full.bm, criterion = "waic")
S2.itemvsfull.weights <- S2.itemvsfull.weights %>% as_tibble(rownames = "index")
S2.itemvsfull.weights <- data.frame(S2.itemvsfull.weights, row.names = "index")
saveRDS(S2.itemvsfull.comp, "../models/S2.itemvsfull.comp.rds")
saveRDS(S2.itemvsfull.weights, "../models/S2.itemvsfull.weights.rds")
# STUDY 3 - item vs full #######################################
S3.itemvsfull.comp <- loo_compare(S3.item.model, S3.full.bm,
criterion = "waic")%>%as_tibble(rownames = "index")
S3.itemvsfull.comp  <- data.frame(S3.itemvsfull.comp , row.names = "index")
S3.itemvsfull.weights <- model_weights(S3.item.model, S3.full.bm, criterion = "waic")
S3.itemvsfull.weights <- S3.itemvsfull.weights %>% as_tibble(rownames = "index")
S3.itemvsfull.weights <- data.frame(S3.itemvsfull.weights, row.names = "index")
saveRDS(S3.itemvsfull.comp, "../models/S3.itemvsfull.comp.rds")
saveRDS(S3.itemvsfull.weights, "../models/S3.itemvsfull.weights.rds")
S1.item.model <- readRDS("../models/S1.item.model.rds")
S1.itemvsfull.comp <- readRDS("../models/S1.itemvsfull.comp.rds")
S1.itemvsfull.weights <- readRDS("../models/S1.itemvsfull.weights.rds")
S2.item.model <- readRDS("../models/S2.item.model.rds")
S2.itemvsfull.comp <- readRDS("../models/S2.itemvsfull.comp.rds")
S2.itemvsfull.weights <- readRDS("../models/S2.itemvsfull.weights.rds")
S3.item.model <- readRDS("../models/S3.item.model.rds")
S3.itemvsfull.comp <- readRDS("../models/S3.itemvsfull.comp.rds")
S3.itemvsfull.weights <- readRDS("../models/S3.itemvsfull.weights.rds")
# POSTERIOR PREDICTICE CHECKS ###################
# pp_check(S1.item.model)
# pp_check(S1.item.model, type = "bars")
#
# pp_check(S2.item.model)
# pp_check(S2.item.model, type = "bars")
#
# pp_check(S3.item.model)
# pp_check(S3.item.model, type = "bars")
### inspect rhat --> always 1 --> good
### inspect Bulk_ESS --> always > 1000 --> good
#################       Estimate Est.Error l-95% CI
# summary(S1.item.model) # Intercept 2.04      0.23     1.61
# summary(S2.item.model) # Intercept 1.09      0.25     0.60
# summary(S3.item.model) # Intercept 1.06      0.21     0.64
# S1 item model prepping for text and table ####################
# for reporting BULK_ESS and Coefficients
S1.item.coef <- summarise_draws(as_draws_df(S1.item.model)) # ! standard is just 90% CrI
# NOTE: # as_draws_df() from posterior uses 90% CrIs
# we preregistered using 2.5% and 97.5% quantiles
draws_df <- as_draws_df(S1.item.model)
quantiles_df <- as.data.frame(t(apply(draws_df, 2, quantile, probs = c(0.025, 0.975))))
quantiles_df <- tibble::rownames_to_column(quantiles_df, var = "variable")
names(quantiles_df)[2:3] <- c("q2.5", "q97.5")
S1.item.coef <- left_join(S1.item.coef, quantiles_df, by = "variable")
# for table in appendix:
S1.item.coef.table <- S1.item.coef
# for reporting in text:
S1.item.coef <- S1.item.coef %>%
slice(1:16) %>%
mutate(variable = gsub("b_", "", variable)) %>%
mutate(variable = gsub("condition", "", variable)) %>%
data.frame(row.names = "variable")
# S2 item model prepping for text and table ####################
# for reporting BULK_ESS and Coefficients
S2.item.coef <- summarise_draws(as_draws_df(S2.item.model)) # ! standard is just 90% CrI
# NOTE: # as_draws_df() from posterior uses 90% CrIs
# we preregistered using 2.5% and 97.5% quantiles
draws_df <- as_draws_df(S2.item.model)
quantiles_df <- as.data.frame(t(apply(draws_df, 2, quantile, probs = c(0.025, 0.975))))
quantiles_df <- tibble::rownames_to_column(quantiles_df, var = "variable")
names(quantiles_df)[2:3] <- c("q2.5", "q97.5")
S2.item.coef <- left_join(S2.item.coef, quantiles_df, by = "variable")
# for table in appendix:
S2.item.coef.table <- S2.item.coef
# for reporting in text:
S2.item.coef <- S2.item.coef %>%
slice(1:16) %>%
mutate(variable = gsub("b_", "", variable)) %>%
mutate(variable = gsub("condition", "", variable)) %>%
data.frame(row.names = "variable")
# S3 item model prepping for text and table ####################
# for reporting BULK_ESS and Coefficients
S3.item.coef <- summarise_draws(as_draws_df(S3.item.model)) # ! standard is just 90% CrI
# NOTE: # as_draws_df() from posterior uses 90% CrIs
# we preregistered using 2.5% and 97.5% quantiles
draws_df <- as_draws_df(S3.item.model)
quantiles_df <- as.data.frame(t(apply(draws_df, 2, quantile, probs = c(0.025, 0.975))))
quantiles_df <- tibble::rownames_to_column(quantiles_df, var = "variable")
names(quantiles_df)[2:3] <- c("q2.5", "q97.5")
S3.item.coef <- left_join(S3.item.coef, quantiles_df, by = "variable")
# for table in appendix:
S3.item.coef.table <- S3.item.coef
# for reporting in text:
S3.item.coef <- S3.item.coef %>%
slice(1:16) %>%
mutate(variable = gsub("b_", "", variable)) %>%
mutate(variable = gsub("condition", "", variable)) %>%
data.frame(row.names = "variable")
View(S2.item.coef.table)
View(S2.item.coef)
