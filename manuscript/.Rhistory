stat = "identity", alpha = .25)+
geom_point(data=p3, aes(x = days/365.25, y = .5, fill = condition, col = condition), stat = "identity", size=3)+
geom_text(data=p3, aes(label = months, x = days/365.25, y = .24, fill = condition, col = condition), angle=90, size = 4, parse=T)+
geom_text(data=p3, aes(label = "months", x = days/365.25, y = .38, fill = condition, col = condition), angle=90, size = 4, parse=T)+
theme_minimal()+
scale_color_ptol(name = "condition")+
scale_fill_ptol(name = "condition")+
facet_grid(~condition)+
labs(x = "Age", y="Proportion correct")+
ylim(0,1)+
xlim(3,7)+
theme(legend.position = "bottom")
library("papaja")
r_refs("library.bib")
# Loading packages
# NOTE: this will install these packages on your machine in case they are missing
# General
if (!require(tidyverse)) install.packages('tidyverse'); library(tidyverse)
if (!require(lsr)) install.packages('lsr'); library(lsr) # Analysis, Cohen's D
if (!require(ggthemes)) install.packages('ggthemes'); library(ggthemes) # for tufte boxplots
# bayes packages
if (!require(brms)) install.packages('brms'); library(brms) #
if (!require(tidybayes)) install.packages('tidybayes'); library(tidybayes) #
if (!require(HDInterval)) install.packages('HDInterval'); library(HDInterval) #
# Troubleshooting Knitting Document
# might be required for knitting manuscript
# install.packages('tinytex')
# tinytex::install_tinytex()
#
# tinytex::tlmgr_update()
# tinytex::reinstall_tinytex()
rep.data <- readRDS("../data/symlitrep_final_data.rds")
age.plot.data <- rep.data %>% #select data
distinct(subid, .keep_all = TRUE) %>% # select only one line per participant
filter(valid != "drop")  %>%
mutate(sex = as.factor(sex))  %>%
mutate(sex = fct_recode(sex, "female" = "0","male"="1"))
View(age.plot.data)
age.plot <- ggplot(age.plot.data, aes(x = agem, fill = sex)) +
geom_dotplot(stackgroups = TRUE, binwidth = 1, binpositions = "all")+
coord_cartesian(xlim = c(36, 86), ylim = c(0, 0.1)) +
theme_bw() +
scale_x_continuous(name = "Age in Months", breaks = seq(36, 84, 12), minor_breaks = seq(36, 84, 1)) +
scale_y_continuous(name = "Count", breaks = NULL) +
#coord_fixed(ratio=5) +
theme(panel.grid.minor.x = element_line(size = 0.25, linetype = 2),
panel.grid.major.x = element_line(size = 1, linetype = 1)) +
facet_wrap(~ study, ncol = 1)
age.plot.data <- rep.data %>% #select data
distinct(subid, .keep_all = TRUE) %>% # select only one line per participant
filter(valid != "drop")  %>%
mutate(sex = as.factor(sex))  %>%
mutate(sex = fct_recode(sex, "female" = "0","male"="1"))
age.plot <- ggplot(age.plot.data, aes(x = agem, fill = sex)) +
geom_dotplot(stackgroups = TRUE, binwidth = 1, binpositions = "all")+
coord_cartesian(xlim = c(36, 86), ylim = c(0, 0.1)) +
theme_bw() +
scale_x_continuous(name = "Age in Months", breaks = seq(36, 84, 12), minor_breaks = seq(36, 84, 1)) +
scale_y_continuous(name = "Count", breaks = NULL) +
#coord_fixed(ratio=5) +
theme(panel.grid.minor.x = element_line(linewidth = 0.25, linetype = 2),
panel.grid.major.x = element_line(linewidth = 1, linetype = 1)) +
facet_wrap(~ study, ncol = 1)
age.plot
age.plot.data <- rep.data %>% #select data
distinct(subid, .keep_all = TRUE) %>% # select only one line per participant
filter(valid != "drop")  %>%
mutate(sex = as.factor(sex))  %>%
mutate(sex = fct_recode(sex, "female" = "0","male"="1")) %>%
rename(Sex = sex)
age.plot <- ggplot(age.plot.data, aes(x = agem, fill = Sex)) +
geom_dotplot(stackgroups = TRUE, binwidth = 1, binpositions = "all")+
coord_cartesian(xlim = c(36, 86), ylim = c(0, 0.1)) +
theme_bw() +
scale_x_continuous(name = "Age in Months", breaks = seq(36, 84, 12), minor_breaks = seq(36, 84, 1)) +
scale_y_continuous(name = "Count", breaks = NULL) +
#coord_fixed(ratio=5) +
theme(panel.grid.minor.x = element_line(linewidth = 0.25, linetype = 2),
panel.grid.major.x = element_line(linewidth = 1, linetype = 1)) +
facet_wrap(~ study, ncol = 1)
age.plot
age.plot.data <- rep.data %>% #select data
distinct(subid, .keep_all = TRUE) %>% # select only one line per participant
filter(valid != "drop")  %>%
mutate(sex = as.factor(sex))  %>%
mutate(sex = fct_recode(sex, "female" = "0","male"="1")) %>%
rename(Sex = sex)
age.plot <- ggplot(age.plot.data, aes(x = agem, fill = Sex)) +
geom_dotplot(stackgroups = TRUE, binwidth = 1, binpositions = "all")+
coord_cartesian(xlim = c(36, 86), ylim = c(0, 0.1)) +
theme_bw() +
scale_x_continuous(name = "Age in months", breaks = seq(36, 84, 12), minor_breaks = seq(36, 84, 1)) +
scale_y_continuous(name = "Count", breaks = NULL) +
#coord_fixed(ratio=5) +
theme(panel.grid.minor.x = element_line(linewidth = 0.25, linetype = 2),
panel.grid.major.x = element_line(linewidth = 1, linetype = 1)) +
facet_wrap(~ study, ncol = 1)
age.plot
View(age.plot.data)
rep.age.table.data  <- rep.data %>%
distinct(subid, .keep_all = TRUE) %>% # select only one line per participant
filter(valid != "drop") %>%  # filter out dropped participants
group_by(study) %>%
summarize(
N = length(subid),
female = sum(sex=="0"),
Mean = mean(agem),
Min = min(agem),
Max = max(agem),
SD = round(sd(agem), 2))
View(rep.age.table.data)
View(rep.age.table.data)
drop.plot.data <- rep.data %>% #select data
distinct(subid, .keep_all = TRUE) %>% # select only one line per participant
filter(valid == "drop")
drop.plot <- ggplot(drop.plot.data, aes(x = agem, fill = drop)) +
geom_dotplot(stackgroups = TRUE, binwidth = 1, binpositions = "all")+
coord_cartesian(xlim = c(36, 85), ylim = c(0, 0.1)) +
theme_bw() +
scale_x_continuous(name = "Alter in Monaten", breaks = seq(36, 84, 12), minor_breaks = seq(36, 84, 1)) +
scale_y_continuous(name = "Anzahl Drops", breaks = NULL) +
#coord_fixed(ratio=5) +
theme(panel.grid.minor.x = element_line(size = 0.25, linetype = 2),
panel.grid.major.x = element_line(size = 1, linetype = 1)) +
facet_wrap(~ study, ncol = 1)
drop.plot
rep.age.table.data <- data.frame(rep.age.table.data, row.names = "study")
View(rep.age.table.data)
View(rep.age.table.data)
rep.age.table.data  <- rep.data %>%
distinct(subid, .keep_all = TRUE) %>% # select only one line per participant
filter(valid != "drop") %>%  # filter out dropped participants
group_by(study) %>%
summarize(
N = length(subid),
female = sum(sex=="0"),
Mean = mean(agem),
Min = min(agem),
Max = max(agem),
SD = round(sd(agem), 2))
# drop.table.data  <- rep.data %>%
#   distinct(subid, .keep_all = TRUE) %>% # select only one line per participant
#   filter(valid == "drop") %>%
#   group_by(study, drop) %>%
#   summarize(
#     N = length(subid),
#     female = sum(sex=="0"),
#     Mean = mean(agem),
#     Min = min(agem),
#     Max = max(agem),
#     SD = round(sd(agem), 2))
# convert first column into row names
rep.age.table.data <- data.frame(rep.age.table.data, row.names = "study")
# A total of `r age.table.data["study1", "N"]` two- to four-year-old children (M = `r age.table.data["study1", "Mean"]` months, SD = `r age.table.data["study1", "SD"]` months, range `r age.table.data["study1", "Min"]` - `r age.table.data["study1", "Max"]` months; `r age.table.data["study1", "female"]` female) participated in the study (see Figure\ \@ref(fig:S1ArrowsProgressDataCollectionPlot) for an overview of the age-distribution).
sum(rep.age.table.data$N)
rep.age.table.data  <- rep.data %>%
distinct(subid, .keep_all = TRUE) %>% # select only one line per participant
filter(valid != "drop") %>%  # filter out dropped participants
group_by(study) %>%
summarize(
N = length(subid),
female = sum(sex=="0"),
Mean = mean(agem),
Min = min(agem),
Max = max(agem),
SD = round(sd(agem), 2))
# drop.table.data  <- rep.data %>%
#   distinct(subid, .keep_all = TRUE) %>% # select only one line per participant
#   filter(valid == "drop") %>%
#   group_by(study, drop) %>%
#   summarize(
#     N = length(subid),
#     female = sum(sex=="0"),
#     Mean = mean(agem),
#     Min = min(agem),
#     Max = max(agem),
#     SD = round(sd(agem), 2))
# convert first column into row names
rep.age.table.data <- data.frame(rep.age.table.data, row.names = "study")
# A total of `r age.table.data["study1", "N"]` two- to four-year-old children (M = `r age.table.data["study1", "Mean"]` months, SD = `r age.table.data["study1", "SD"]` months, range `r age.table.data["study1", "Min"]` - `r age.table.data["study1", "Max"]` months; `r age.table.data["study1", "female"]` female) participated in the study (see Figure\ \@ref(fig:S1ArrowsProgressDataCollectionPlot) for an overview of the age-distribution).
rep.age.table.data["study1", "N"]
View(rep.age.table.data)
rep.drop.table.data  <- rep.data %>%
distinct(subid, .keep_all = TRUE) %>% # select only one line per participant
filter(valid == "drop") %>%
group_by(study, drop) %>%
summarize(
N = length(subid),
female = sum(sex=="0"),
Mean = mean(agem),
Min = min(agem),
Max = max(agem),
SD = round(sd(agem), 2))
View(rep.drop.table.data)
View(rep.age.table.data)
rep.drop.table.data <- data.frame(rep.drop.table.data, row.names = "study")
rep.age.table.data  <- rep.data %>%
distinct(subid, .keep_all = TRUE) %>% # select only one line per participant
filter(valid != "drop") %>%  # filter out dropped participants
group_by(study) %>%
summarize(
N = length(subid),
female = sum(sex=="0"),
Mean = mean(agem),
Min = min(agem),
Max = max(agem),
SD = round(sd(agem), 2))
rep.age.table.data <- data.frame(rep.age.table.data, row.names = "study")
rep.drop.table.data <- data.frame(rep.drop.table.data, row.names = "study")
rep.drop.table.data$N[study == "study1, drop == "fail_in_fam"]
rep.drop.table.data$N[study == "study1, drop == "fail_in_fam"]
rep.drop.table.data$N[study == "study1 & drop == "fail_in_fam"]
rep.drop.table.data$N[study == "study1" & drop == "fail_in_fam"]
rep.drop.table.data  <- rep.data %>%
distinct(subid, .keep_all = TRUE) %>% # select only one line per participant
filter(valid == "drop") %>%
group_by(study) %>%
summarize(
N = length(subid),
female = sum(sex=="0"),
Mean = mean(agem),
Min = min(agem),
Max = max(agem),
fail_in_fam = length(subid[drop == "fail_in_fam"]))
table(rep.data$drop)
View(rep.age.table.data)
rep.drop.table.data  <- rep.data %>%
distinct(subid, .keep_all = TRUE) %>% # select only one line per participant
filter(valid == "drop") %>%
group_by(study) %>%
summarize(
N = length(subid),
female = sum(sex=="0"),
Mean = mean(agem),
Min = min(agem),
Max = max(agem),
fail_in_fam = length(subid[drop == "fail_in_fam"]),
quit_early = length(subid[drop == "quit_early"]),
fussy_child = length(subid[drop == "fussy_child"]),
language = length(subid[drop == "language"]),
technical = length(subid[drop == "technical"]))
rep.drop.table.data <- data.frame(rep.drop.table.data, row.names = "study")
rep.drop.table.data["study1", "N"]
rep.drop.table.data["study1", "fail_in_fam"]
rep.drop.table.data["study1", "quit_early"]
rep.drop.table.data["study1", "fussy_child"]
rep.drop.table.data["study2", "language"]`
rep.drop.table.data["study2", "language"]
# Plot without facetting
p3 <- f3 %>%
mutate(age = age * 365.25)%>%
group_by(condition)%>%
summarise(
Q2.5_closest_to.5 = Q2.5[which.min(abs(Q2.5-.5))],
estimate_closest_to.5 = Estimate[which.min(abs(Q2.5-.5))],
days = age[which.min(abs(Q2.5-.5))],
months = round(days/30.5),
years = round(days/365.25, 2),
monthlabels = as.character(paste(months, "months")))
# load model from saving rds
S3.full.bm <- readRDS("../models/S3.full.bm.rds")
nd3 <- tibble(z.age = rep(seq(from = min(rep.S3.bayes.data$z.age),
to = max(rep.S3.bayes.data$z.age),
length.out = 50),4),
condition = c(rep("Number of Object",50),
rep("Number of Feature",50),
rep("Size of Object",50),
rep("Size of Feature",50)),
z.sex = rep(0,200),
z.trial = rep(0,200))
# prepare data
rep.S3.bayes.data  <- rep.data %>%
filter(valid != "drop") %>% # valid participants only
filter(study == "study3") %>% # in study3
filter(trial != "fam") %>%
select(condition, subid, sex, aged, correct, trial) %>%
mutate(z.trial = scale(as.numeric(trial)),
ageinyears = aged/356.25,
z.age = ageinyears - mean(ageinyears),
z.sex = scale(as.numeric(sex)))
# load model from saving rds
S3.full.bm <- readRDS("../models/S3.full.bm.rds")
nd3 <- tibble(z.age = rep(seq(from = min(rep.S3.bayes.data$z.age),
to = max(rep.S3.bayes.data$z.age),
length.out = 50),4),
condition = c(rep("Number of Object",50),
rep("Number of Feature",50),
rep("Size of Object",50),
rep("Size of Feature",50)),
z.sex = rep(0,200),
z.trial = rep(0,200))
f3 <- fitted(S3.full.bm,
newdata = nd3,
re_formula = NA) %>%
as_tibble() %>%
bind_cols(nd3)%>%
mutate(age = z.age + mean(rep.S3.bayes.data$ageinyears))
# summarize the data to include them in the plot later on
d3 <- rep.S3.bayes.data%>%
group_by(subid, ageinyears, condition)%>%
summarise(mean = mean(correct))
# load model from saving rds
S3.full.bm <- readRDS("../models/S3.full.bm.rds")
nd3 <- tibble(z.age = rep(seq(from = min(rep.S3.bayes.data$z.age),
to = max(rep.S3.bayes.data$z.age),
length.out = 50),4),
condition = c(rep("Number of Object",50),
rep("Number of Feature",50),
rep("Size of Object",50),
rep("Size of Feature",50)),
z.sex = rep(0,200),
z.trial = rep(0,200))
f3 <- fitted(S3.full.bm,
newdata = nd3,
re_formula = NA) %>%
as_tibble() %>%
bind_cols(nd3)%>%
mutate(age = z.age + mean(rep.S3.bayes.data$ageinyears))
# summarize the data to include them in the plot later on
d3 <- rep.S3.bayes.data%>%
group_by(subid, ageinyears, condition)%>%
summarise(mean = mean(correct))
# load model from saving rds
S3.full.bm <- readRDS("../models/S3.full.bm.rds")
nd3 <- tibble(z.age = rep(seq(from = min(rep.S3.bayes.data$z.age),
to = max(rep.S3.bayes.data$z.age),
length.out = 50),4),
condition = c(rep("Number of Object",50),
rep("Number of Feature",50),
rep("Size of Object",50),
rep("Size of Feature",50)),
z.sex = rep(0,200),
z.trial = rep(0,200))
f3 <- fitted(S3.full.bm,
newdata = nd3,
re_formula = NA) %>%
as_tibble() %>%
bind_cols(nd3)%>%
mutate(age = z.age + mean(rep.S3.bayes.data$ageinyears))
# summarize the data to include them in the plot later on
d3 <- rep.S3.bayes.data%>%
group_by(subid, ageinyears, condition)%>%
summarise(mean = mean(correct))
# Plot without facetting
p3 <- f3 %>%
mutate(age = age * 365.25)%>%
group_by(condition)%>%
summarise(
Q2.5_closest_to.5 = Q2.5[which.min(abs(Q2.5-.5))],
estimate_closest_to.5 = Estimate[which.min(abs(Q2.5-.5))],
days = age[which.min(abs(Q2.5-.5))],
months = round(days/30.5),
years = round(days/365.25, 2),
monthlabels = as.character(paste(months, "months")))
ggplot()+
geom_hline(yintercept = .5, lty = 2, alpha = .75)+
geom_point(data = d3, aes(x = ageinyears, y = mean, col = condition), alpha = .5, shape = 1)+
geom_smooth(data = f3, aes(x = age, y = Estimate, ymin = Q2.5, ymax = Q97.5, fill =condition, col = condition),
stat = "identity", alpha = .25)+
geom_point(data=p3, aes(x = days/365.25, y = .5, fill = condition, col = condition), stat = "identity", size=3)+
geom_text(data=p3, aes(label = months, x = days/365.25, y = .24, fill = condition, col = condition), angle=90, size = 4, parse=T)+
geom_text(data=p3, aes(label = "months", x = days/365.25, y = .38, fill = condition, col = condition), angle=90, size = 4, parse=T)+
theme_minimal()+
scale_color_ptol(name = "condition")+
scale_fill_ptol(name = "condition")+
#facet_grid(~condition)+
labs(x = "Age", y="Proportion correct")+
ylim(0,1)+
xlim(3,7)+
theme(legend.position = "bottom")
# load model from saving rds
S3.full.bm <- readRDS("../models/S3.full.bm.rds")
nd3 <- tibble(z.age = rep(seq(from = min(rep.S3.bayes.data$z.age),
to = max(rep.S3.bayes.data$z.age),
length.out = 50),4),
condition = c(rep("Number of Object",50),
rep("Number of Feature",50),
rep("Size of Object",50),
rep("Size of Feature",50)),
z.sex = rep(0,200),
z.trial = rep(0,200))
f3 <- fitted(S3.full.bm,
newdata = nd3,
re_formula = NA) %>%
as_tibble() %>%
bind_cols(nd3)%>%
mutate(age = z.age + mean(rep.S3.bayes.data$ageinyears))
# summarize the data to include them in the plot later on
d3 <- rep.S3.bayes.data%>%
group_by(subid, ageinyears, condition)%>%
summarise(mean = mean(correct))
# load model from rds
S1.full.bm <- readRDS("../models/S1.full.bm.rds")
# table(rep.S1.bayes.data$condition)
nd1 <- tibble(z.age = rep(seq(from = min(rep.S1.bayes.data$z.age), to = max(rep.S1.bayes.data$z.age), length.out = 50),4),
condition = c(rep("Representation",50),
rep("Pars Pro Toto",50),
rep("Complex Form Analogy",50),
rep("Simple Form Analogy",50)),
# the four conditions in the data
z.sex = rep(0,200),
z.trial = rep(0,200))
# prepare data
rep.S3.bayes.data  <- rep.data %>%
filter(valid != "drop") %>% # valid participants only
filter(study == "study3") %>% # in study3
filter(trial != "fam") %>%
select(condition, subid, sex, aged, correct, trial) %>%
mutate(z.trial = scale(as.numeric(trial)),
ageinyears = aged/356.25,
z.age = ageinyears - mean(ageinyears),
z.sex = scale(as.numeric(sex)))
# load model from saving rds
S3.full.bm <- readRDS("../models/S3.full.bm.rds")
nd3 <- tibble(z.age = rep(seq(from = min(rep.S3.bayes.data$z.age),
to = max(rep.S3.bayes.data$z.age),
length.out = 50),4),
condition = c(rep("Number of Object",50),
rep("Number of Feature",50),
rep("Size of Object",50),
rep("Size of Feature",50)),
z.sex = rep(0,200),
z.trial = rep(0,200))
f3 <- fitted(S3.full.bm,
newdata = nd3,
re_formula = NA) %>%
as_tibble() %>%
bind_cols(nd3)%>%
mutate(age = z.age + mean(rep.S3.bayes.data$ageinyears))
# summarize the data to include them in the plot later on
d3 <- rep.S3.bayes.data%>%
group_by(subid, ageinyears, condition)%>%
summarise(mean = mean(correct))
# Plot without facetting
p3 <- f3 %>%
mutate(age = age * 365.25)%>%
group_by(condition)%>%
summarise(
Q2.5_closest_to.5 = Q2.5[which.min(abs(Q2.5-.5))],
estimate_closest_to.5 = Estimate[which.min(abs(Q2.5-.5))],
days = age[which.min(abs(Q2.5-.5))],
months = round(days/30.5),
years = round(days/365.25, 2),
monthlabels = as.character(paste(months, "months")))
ggplot()+
geom_hline(yintercept = .5, lty = 2, alpha = .75)+
geom_point(data = d3, aes(x = ageinyears, y = mean, col = condition), alpha = .5, shape = 1)+
geom_smooth(data = f3, aes(x = age, y = Estimate, ymin = Q2.5, ymax = Q97.5, fill =condition, col = condition),
stat = "identity", alpha = .25)+
geom_point(data=p3, aes(x = days/365.25, y = .5, fill = condition, col = condition), stat = "identity", size=3)+
geom_text(data=p3, aes(label = months, x = days/365.25, y = .24, fill = condition, col = condition), angle=90, size = 4, parse=T)+
geom_text(data=p3, aes(label = "months", x = days/365.25, y = .38, fill = condition, col = condition), angle=90, size = 4, parse=T)+
theme_minimal()+
scale_color_ptol(name = "condition")+
scale_fill_ptol(name = "condition")+
#facet_grid(~condition)+
labs(x = "Age", y="Proportion correct")+
ylim(0,1)+
xlim(3,7)+
theme(legend.position = "bottom")
p3 <- f3 %>%
mutate(age = age * 365.25)%>%
group_by(condition)%>%
summarise(
Q2.5_closest_to.5 = Q2.5[which.min(abs(Q2.5-.5))],
estimate_closest_to.5 = Estimate[which.min(abs(Q2.5-.5))],
days = age[which.min(abs(Q2.5-.5))],
months = round(days/30.5),
years = round(days/365.25, 2),
monthlabels = as.character(paste(months, "months")))
ggplot()+
geom_hline(yintercept = .5, lty = 2, alpha = .75)+
geom_point(data = d3, aes(x = ageinyears, y = mean, col = condition), alpha = .5, shape = 1)+
geom_smooth(data = f3, aes(x = age, y = Estimate, ymin = Q2.5, ymax = Q97.5, fill =condition, col = condition),
stat = "identity", alpha = .25)+
geom_point(data=p3, aes(x = days/365.25, y = .5, fill = condition, col = condition), stat = "identity", size=3)+
geom_text(data=p3, aes(label = months, x = days/365.25, y = .24, fill = condition, col = condition), angle=90, size = 4, parse=T)+
geom_text(data=p3, aes(label = "months", x = days/365.25, y = .38, fill = condition, col = condition), angle=90, size = 4, parse=T)+
theme_minimal()+
scale_color_ptol(name = "condition")+
scale_fill_ptol(name = "condition")+
facet_grid(~condition)+
labs(x = "Age", y="Proportion correct")+
ylim(0,1)+
xlim(3,7)+
theme(legend.position = "bottom")
p3 <- f3 %>%
mutate(age = age * 365.25)%>%
group_by(condition)%>%
summarise(
Q2.5_closest_to.5 = Q2.5[which.min(abs(Q2.5-.5))],
estimate_closest_to.5 = Estimate[which.min(abs(Q2.5-.5))],
days = age[which.min(abs(Q2.5-.5))],
months = round(days/30.5),
years = round(days/365.25, 2),
monthlabels = as.character(paste(months, "months")))
ggplot()+
geom_hline(yintercept = .5, lty = 2, alpha = .75)+
geom_point(data = d3, aes(x = ageinyears, y = mean, col = condition), alpha = .5, shape = 1)+
geom_smooth(data = f3, aes(x = age, y = Estimate, ymin = Q2.5, ymax = Q97.5, fill =condition, col = condition),
stat = "identity", alpha = .25)+
geom_point(data=p3, aes(x = days/365.25, y = .5, fill = condition, col = condition), stat = "identity", size=3)+
geom_text(data=p3, aes(label = months, x = days/365.25, y = .24, fill = condition, col = condition), angle=90, size = 4, parse=T)+
geom_text(data=p3, aes(label = "months", x = days/365.25, y = .38, fill = condition, col = condition), angle=90, size = 4, parse=T)+
theme_minimal()+
scale_color_ptol(name = "condition")+
scale_fill_ptol(name = "condition")+
facet_grid(~condition)+
labs(x = "Age", y="Proportion correct")+
ylim(0,1)+
xlim(3,7)+
theme(legend.position = "bottom")
