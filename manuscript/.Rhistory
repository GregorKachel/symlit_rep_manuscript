library("papaja")
r_refs("library.bib")
# Loading packages
# NOTE: this will install these packages on your machine in case they are missing
# General
if (!require(tidyverse)) install.packages('tidyverse'); library(tidyverse)
if (!require(lsr)) install.packages('lsr'); library(lsr) # Analysis, Cohen's D
if (!require(ggthemes)) install.packages('ggthemes'); library(ggthemes) # for tufte boxplots
# bayes packages
if (!require(brms)) install.packages('brms'); library(brms) #
if (!require(tidybayes)) install.packages('tidybayes'); library(tidybayes) #
if (!require(HDInterval)) install.packages('HDInterval'); library(HDInterval) #
# Troubleshooting Knitting Document
# might be required for knitting manuscript
# install.packages('tinytex')
# tinytex::install_tinytex()
#
# tinytex::tlmgr_update()
# tinytex::reinstall_tinytex()
# Seed for random number generation
set.seed(42)
knitr::opts_chunk$set(cache.extra = knitr::rand_seed)
# Full data set including all participants (i.e. including dropped participants)
rep.data <- readRDS("../data/symlitrep_final_data.rds")%>%
mutate(ageinyears = aged/356.25,
z.age = ageinyears - mean(ageinyears))
# $ study          : Factor w/ 3 levels --> Study1, Study2, Study3
# $ title          : Factor w/ 3 levels --> Name/Theme of the Study
# $ condition      : Factor w/ 12 levels --> Name of the condition i.e. experimental manipulation
# $ cond           : Factor w/ 12 levels --> Name of the condition in short form
# $ subid          : Factor w/ 364 levels --> Subjet ID
# $ sex            : Factor w/ 2 levels "0","1": --> Participants' sex; 1 = male
# $ agey           : num [1:7146] total age in years
# $ agem           : num [1:7146] total age in months
# $ aged           : num [1:7146] total age in days
# $ valid          : Factor w/ 3 levels --> Status of Participants
# "valid"= main sample
# "drop" = excluded participants
# "oversampling" = data collected after reaching the minimum of 96 participants per study
# $ drop           : Factor w/ 7 levels "fail_in_fam",..: --> Reasons for Participant exclusions
# fail_in_fam  --> did not meet criterion in familiarisation phase
# fussy_child  --> child was fussy or uncooperative, lost interest in participating
# language     --> child did not understand instructions due to not speaking German fluently enough
# oversampling --> Not a drop per se: participants tested after reaching minimum of participants
# quit_early   --> Children that quit early and did not contribute at least 8 test trials
# technical    --> technical problems; i.e. script for presenting experiment crashed
# $ trial          : Factor w/ 17 levels NUmbers 1-16 for test trials; "fam" for familiarisation trials
# $ correct        : int [1:7146] correct choice = 1; incorrect = 0
# $ rt             : int [1:7146] reaction time in ms
# $ experimenter   : Factor w/ 6 levels --> ID of the experimenter; E1 - E6
# $ where          : Factor w/ 4 levels
# afterschoolcenter --> after school care; testing in the early afternoon
# daycare --> testing in kindergartens, prior to lunch
# home --> testing during visits at home; usually in the afternoon
# lab --> children were tested when visiting the lab; usually in the afternoon
# $ eselectfam     : Factor w/ 2 levels "0","1"
# experimenter occasionally selected choices based on child's pointing during familiarisation traisl
# $ eselectmain    : Factor w/ 2 levels "0","1"
# experimenter occasionally selected choices based on child's pointing during test trails
# $ leftObject     : Factor w/ 99 levels "abpo_tar_1_A.png"
# --> stimulus item displayed on the left side of the screen as target/distractor
# $ rightObject    : Factor w/ 99 levels "abpo_tar_1_A.png"
# --> stimulus item displayed on the right side of the screen as target/distractor
# $ cue            : Factor w/ 98 levels "abpo_cue_1_A.png"
# --> stimulus item displayed in the middle of the screen as a cue
# $ target_position: Factor w/ 2 levels "left","right":
# side on which the target (i.e. correct choice) was presented
# $ item           : Factor w/ 4 levels "1","2","3","4":
# number of stimulus item in the respective condition
# $ target_shape   : Factor w/ 2 levels "A","B":
# target stimulus shape in the respective condition
# $ pick           : Factor w/ 2 levels "
# side of children's choice (left/right)
rep.data %>%
group_by(study, condition) %>%
summarise(unique(subid))
rep.data %>%
group_by(study, condition) %>%
summarise(length(subid))
test <- rep.data %>%
group_by(study, condition) %>%
summarise(length(subid))
View(test)
test <- rep.data %>%
filter(study = "study2") %>%
group_by(study, condition)
test <- rep.data %>%
filter(study == "study2")
table(test$condition)
test <- rep.data %>%
filter(study == "study2") %>%
filter(condition == "Simple Form Analogy")
View(test)
test <- rep.data %>%
filter(study == "study2") %>%
filter(condition == "Representation")
View(test)
test <- rep.data %>%
filter(study == "study2") %>%
filter(condition == "Pars Pro Toto")
View(test)
table(test$condition)
test <- rep.data %>%
filter(study == "study1")
table(test$condition)
test <- rep.data %>%
filter(study == "study1") %>%
filter(condition == "Absolute Position")
View(test)
test <- rep.data %>%
filter(study == "study3")
table(test$condition)
full.data <- readRDS("../data/symlitrep_full_data.rds")
test <- full.data %>%
filter(study == "study3") %>%
filter(condition == "Absolute Position")
table(test$condition)
test <- full.data %>%
filter(study == "study1") %>%
filter(condition == "Absolute Position")
test <- full.data %>%
filter(study == "study2")
table(test$condition)
View(test)
table(test$cond)
test <- full.data %>%
filter(study == "study2") %>%
table(test$cond)
test <- full.data %>%
filter(study == "study2")
table(test$cond)
full.data <- readRDS("../data/symlitrep_full_data.rds")
View(full.data)
test <- full.data %>%
filter(study == "study1"
table(test$cond)
table(test$condition)
test <- full.data %>%
filter(study == "study1")
table(test$condition)
test <- full.data %>%
filter(study == "study1") %>%
filter(condition == "abpo")
View(test)
test <- full.data %>%
filter(study == "study2") %>%
filter(condition == "repr")
View(test)
test <- full.data %>%
filter(study == "study2")
table(test$condition)
test <- full.data %>%
filter(study == "study3")
table(test$condition)
test <- full.data %>%
filter(study == "study1")
table(test$condition)
