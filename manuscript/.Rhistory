mutate(variable = gsub("condition", "", variable)) %>%
data.frame(row.names = "variable")
S1.null.coef <- summarise_draws(as_draws_df(S1.null.bm)) %>%
filter(grepl("^b_", variable))
#
# mean(S1.full.coef$ess_bulk)
# min(S1.full.coef$ess_bulk)
# max(S1.full.coef$ess_bulk)
#
# mean(S1.null.coef$ess_bulk)
# min(S1.null.coef$ess_bulk)
# max(S1.null.coef$ess_bulk)
View(S1.full.coef)
# for reporting BULK_ESS and Coefficients
S1.full.coef <- summarise_draws(as_draws_df(S1.full.bm)) # ! standard is just 90% CrI
# for reporting BULK_ESS and Coefficients
S1.full.coef <- summarise_draws(as_draws_df(S1.full.bm)) # ! standard is just 90% CrI
# NOTE: # as_draws_df() from posterior uses 90% CrIs
# we preregistered using 2.5% and 97.5% quantiles
draws_df <- as_draws_df(S1.full.bm)
quantiles_df <- as.data.frame(t(apply(draws_df, 2, quantile, probs = c(0.025, 0.975))))
quantiles_df <- tibble::rownames_to_column(quantiles_df, var = "variable")
names(quantiles_df)[2:3] <- c("q2.5", "q97.5")
S1.full.coef <- left_join(S1.full.coef, quantiles_df, by = "variable")
# for table in appendix:
S1.full.coef.table <- S1.full.coef
# for reporting in text:
S1.full.coef <- S1.full.coef %>%
filter(grepl("^b_", variable)) %>%
mutate(variable = gsub("b_", "", variable)) %>%
mutate(variable = gsub("condition", "", variable)) %>%
data.frame(row.names = "variable")
S2.full.bm <- readRDS("../models/S2.full.bm.rds")
S2.null.bm <- readRDS("../models/S2.null.bm.rds")
S2.comp <- readRDS("../models/S2.comp.rds")
S2.weights <- readRDS("../models/S2.weights.rds")
S2.full.bm <- readRDS("../models/S2.full.bm.rds")
S2.null.bm <- readRDS("../models/S2.null.bm.rds")
S2.comp <- readRDS("../models/S2.comp.rds")
S2.weights <- readRDS("../models/S2.weights.rds")
### POSTERIOR PREDICTICE CHECKS
### Check plots ...they look good, as expected in binomial models
# pp_check(S2.full.bm)
# pp_check(S2.null.bm)
# pp_check(S2.full.bm, type = "bars")
# pp_check(S2.null.bm, type = "bars")
### EFFECTICE SAMPLE SIZES
### inspect rhat --> always 1 --> good
### inspect Bull_ESS --> always > 1000 --> good
# summary(S2.full.bm)
# summary(S2.null.bm)
# # for reporting BULK_ESS
# S2.full.coef <- summarise_draws(as_draws_df(S2.full.bm)) %>%
#   filter(grepl("^b_", variable)) %>%
#   mutate(variable = gsub("b_", "", variable)) %>%
#   mutate(variable = gsub("condition", "", variable)) %>%
#   data.frame(row.names = "variable")
# for reporting BULK_ESS and Coefficients
S2.full.coef <- summarise_draws(as_draws_df(S2.full.bm)) # ! standard is just 90% CrI
# NOTE: # as_draws_df() from posterior uses 90% CrIs
# we preregistered using 2.5% and 97.5% quantiles
draws_df <- as_draws_df(S2.full.bm)
quantiles_df <- as.data.frame(t(apply(draws_df, 2, quantile, probs = c(0.025, 0.975))))
quantiles_df <- tibble::rownames_to_column(quantiles_df, var = "variable")
names(quantiles_df)[2:3] <- c("q2.5", "q97.5")
S2.full.coef <- left_join(S2.full.coef, quantiles_df, by = "variable")
# for table in appendix:
S2.full.coef.table <- S2.full.coef
# for reporting in text:
S2.full.coef <- S2.full.coef %>%
filter(grepl("^b_", variable)) %>%
mutate(variable = gsub("b_", "", variable)) %>%
mutate(variable = gsub("condition", "", variable)) %>%
data.frame(row.names = "variable")
# NULL MODEL
S2.null.coef <- summarise_draws(as_draws_df(S2.null.bm)) %>%
filter(grepl("^b_", variable))
#
# mean(S2.full.coef$ess_bulk)
# min(S2.full.coef$ess_bulk)
# max(S2.full.coef$ess_bulk)
#
# mean(S2.null.coef$ess_bulk)
# min(S2.null.coef$ess_bulk)
# max(S2.null.coef$ess_bulk)
View(S2.full.coef)
S3.full.bm <- readRDS("../models/S3.full.bm.rds")
S3.null.bm <- readRDS("../models/S3.null.bm.rds")
S3.comp <- readRDS("../models/S3.comp.rds")
S3.weights <- readRDS("../models/S3.weights.rds")
## POSTERIOR PREDICTICE CHECKS
## Check plots ...they look good, as expected in binomial models
# pp_check(S3.full.bm)
# pp_check(S3.null.bm)
# pp_check(S3.full.bm, type = "bars")
# pp_check(S3.null.bm, type = "bars")
# ### EFFECTICE SAMPLE SIZES
# ## inspect rhat --> always 1 --> good
# ## inspect Bull_ESS --> always > 1000 --> good
# summary(S3.full.bm)
# summary(S3.null.bm)
# # for reporting BULK_ESS
# S3.full.coef <- summarise_draws(as_draws_df(S3.full.bm)) %>%
#   filter(grepl("^b_", variable)) %>%
#   mutate(variable = gsub("b_", "", variable)) %>%
#   mutate(variable = gsub("condition", "", variable)) %>%
#   data.frame(row.names = "variable")
# for reporting BULK_ESS and Coefficients
S3.full.coef <- summarise_draws(as_draws_df(S3.full.bm)) # ! standard is just 90% CrI
# NOTE: # as_draws_df() from posterior uses 90% CrIs
# we preregistered using 2.5% and 97.5% quantiles
draws_df <- as_draws_df(S3.full.bm)
quantiles_df <- as.data.frame(t(apply(draws_df, 2, quantile, probs = c(0.025, 0.975))))
quantiles_df <- tibble::rownames_to_column(quantiles_df, var = "variable")
names(quantiles_df)[2:3] <- c("q2.5", "q97.5")
S3.full.coef <- left_join(S3.full.coef, quantiles_df, by = "variable")
# for table in appendix:
S3.full.coef.table <- S3.full.coef
# for reporting in text:
S3.full.coef <- S3.full.coef %>%
filter(grepl("^b_", variable)) %>%
mutate(variable = gsub("b_", "", variable)) %>%
mutate(variable = gsub("condition", "", variable)) %>%
data.frame(row.names = "variable")
# NULL MODEL
S3.null.coef <- summarise_draws(as_draws_df(S3.null.bm)) %>%
filter(grepl("^b_", variable))
# mean(S3.full.coef$ess_bulk)
# min(S3.full.coef$ess_bulk)
# max(S3.full.coef$ess_bulk)
#
# mean(S3.null.coef$ess_bulk)
# min(S3.null.coef$ess_bulk)
# max(S3.null.coef$ess_bulk)
View(S3.full.coef.table)
S1.full.coef.table <- S1.full.coef.table %>%
filter(grepl("^b_", variable)) %>%
mutate(variable = gsub("b_", "", variable)) %>%
mutate(variable = gsub("condition", "", variable)) %>%
mutate(variable = gsub("([^ ])([A-Z])", "\\1 \\2", variable)) %>%
mutate(variable = gsub(":", " × ", variable)) %>%
mutate(variable = gsub("z.age", "Age*", variable)) %>%
mutate(variable = gsub("z.trial", "Trial*", variable)) %>%
mutate(variable = gsub("sex1", "Sex (Male)", variable)) %>%
rename(
Predictor = variable,
Estimate = mean,
SD = sd,
MAD = mad,
`5% CrI` = q5,    # `2.5% CrI` = q2.5,
`95% CrI` = q95,  # `97.5% CrI` = q97.5,
`R̂` = rhat,
`Bulk ESS` = ess_bulk,
`Tail ESS` = ess_tail
)
View(S1.full.coef.table)
View(S1.full.coef)
View(S2.full.coef)
View(S3.full.coef)
S1.full.coef.table <- S1.full.coef.table %>%
filter(grepl("^b_", variable)) %>%
mutate(variable = gsub("b_", "", variable)) %>%
mutate(variable = gsub("condition", "", variable)) %>%
mutate(variable = gsub("([^ ])([A-Z])", "\\1 \\2", variable)) %>%
mutate(variable = gsub(":", " × ", variable)) %>%
mutate(variable = gsub("z.age", "Age*", variable)) %>%
mutate(variable = gsub("z.trial", "Trial*", variable)) %>%
mutate(variable = gsub("sex1", "Sex (Male)", variable)) %>%
select(variable, mean, sd, mad, q2.5, q97.5, ess_bulk, ess_tail) %>%
rename(
Predictor = variable,
Estimate = mean,
SD = sd,
MAD = mad,
`5% CrI` = q5,    # `2.5% CrI` = q2.5,
`95% CrI` = q95,  # `97.5% CrI` = q97.5,
`R̂` = rhat,
`Bulk ESS` = ess_bulk,
`Tail ESS` = ess_tail
)
S1.full.coef.table <- S1.full.coef.table %>%
filter(grepl("^b_", variable)) %>%
mutate(variable = gsub("b_", "", variable)) %>%
mutate(variable = gsub("condition", "", variable)) %>%
mutate(variable = gsub("([^ ])([A-Z])", "\\1 \\2", variable)) %>%
mutate(variable = gsub(":", " × ", variable)) %>%
mutate(variable = gsub("z.age", "Age*", variable)) %>%
mutate(variable = gsub("z.trial", "Trial*", variable)) %>%
mutate(variable = gsub("sex1", "Sex (Male)", variable)) %>%
select(variable, mean, sd, mad, q2.5, q97.5, ess_bulk, ess_tail) %>%
rename(
Predictor = variable,
Estimate = mean,
SD = sd,
MAD = mad,
`2.5% CrI` = q2.5,
`97.5% CrI` = q97.5,
`R̂` = rhat,
`Bulk ESS` = ess_bulk,
`Tail ESS` = ess_tail)
S1.full.bm <- readRDS("../models/S1.full.bm.rds")
S1.null.bm <- readRDS("../models/S1.null.bm.rds")
S1.comp <- readRDS("../models/S1.comp.rds")
S1.weights <- readRDS("../models/S1.weights.rds")
### POSTERIOR PREDICTICE CHECKS
### Check plots ...they look good, as expected in binomial models
# pp_check(S1.full.bm)
# pp_check(S1.null.bm)
# pp_check(S1.full.bm, type = "bars")
# pp_check(S1.null.bm, type = "bars")
### EFFECTICE SAMPLE SIZES
### inspect rhat --> always 1 --> good
### inspect Bull_ESS --> always > 1000 --> good
# summary(S1.full.bm)
# summary(S1.null.bm)
# for reporting BULK_ESS and Coefficients
S1.full.coef <- summarise_draws(as_draws_df(S1.full.bm)) # ! standard is just 90% CrI
# NOTE: # as_draws_df() from posterior uses 90% CrIs
# we preregistered using 2.5% and 97.5% quantiles
draws_df <- as_draws_df(S1.full.bm)
quantiles_df <- as.data.frame(t(apply(draws_df, 2, quantile, probs = c(0.025, 0.975))))
quantiles_df <- tibble::rownames_to_column(quantiles_df, var = "variable")
names(quantiles_df)[2:3] <- c("q2.5", "q97.5")
S1.full.coef <- left_join(S1.full.coef, quantiles_df, by = "variable")
# for table in appendix:
S1.full.coef.table <- S1.full.coef
# for reporting in text:
S1.full.coef <- S1.full.coef %>%
filter(grepl("^b_", variable)) %>%
mutate(variable = gsub("b_", "", variable)) %>%
mutate(variable = gsub("condition", "", variable)) %>%
data.frame(row.names = "variable")
S1.null.coef <- summarise_draws(as_draws_df(S1.null.bm)) %>%
filter(grepl("^b_", variable))
#
# mean(S1.full.coef$ess_bulk)
# min(S1.full.coef$ess_bulk)
# max(S1.full.coef$ess_bulk)
#
# mean(S1.null.coef$ess_bulk)
# min(S1.null.coef$ess_bulk)
# max(S1.null.coef$ess_bulk)
S1.full.coef.table <- S1.full.coef.table %>%
filter(grepl("^b_", variable)) %>%
mutate(variable = gsub("b_", "", variable)) %>%
mutate(variable = gsub("condition", "", variable)) %>%
mutate(variable = gsub("([^ ])([A-Z])", "\\1 \\2", variable)) %>%
mutate(variable = gsub(":", " × ", variable)) %>%
mutate(variable = gsub("z.age", "Age*", variable)) %>%
mutate(variable = gsub("z.trial", "Trial*", variable)) %>%
mutate(variable = gsub("sex1", "Sex (Male)", variable)) %>%
select(variable, mean, sd, mad, q2.5, q97.5, ess_bulk, ess_tail) %>%
rename(
Predictor = variable,
Estimate = mean,
SD = sd,
MAD = mad,
`2.5% CrI` = q2.5,
`97.5% CrI` = q97.5,
`R̂` = rhat,
`Bulk ESS` = ess_bulk,
`Tail ESS` = ess_tail)
# for reporting BULK_ESS and Coefficients
S1.full.coef <- summarise_draws(as_draws_df(S1.full.bm)) # ! standard is just 90% CrI
# NOTE: # as_draws_df() from posterior uses 90% CrIs
# we preregistered using 2.5% and 97.5% quantiles
draws_df <- as_draws_df(S1.full.bm)
quantiles_df <- as.data.frame(t(apply(draws_df, 2, quantile, probs = c(0.025, 0.975))))
quantiles_df <- tibble::rownames_to_column(quantiles_df, var = "variable")
names(quantiles_df)[2:3] <- c("q2.5", "q97.5")
S1.full.coef <- left_join(S1.full.coef, quantiles_df, by = "variable")
# for table in appendix:
S1.full.coef.table <- S1.full.coef
S1.full.coef.table.fin <- S1.full.coef.table %>%
filter(grepl("^b_", variable)) %>%
mutate(variable = gsub("b_", "", variable)) %>%
mutate(variable = gsub("condition", "", variable)) %>%
mutate(variable = gsub("([^ ])([A-Z])", "\\1 \\2", variable)) %>%
mutate(variable = gsub(":", " × ", variable)) %>%
mutate(variable = gsub("z.age", "Age*", variable)) %>%
mutate(variable = gsub("z.trial", "Trial*", variable)) %>%
mutate(variable = gsub("sex1", "Sex (Male)", variable)) %>%
select(variable, mean, sd, mad, q2.5, q97.5, ess_bulk, ess_tail) %>%
rename(
Predictor = variable,
Estimate = mean,
SD = sd,
MAD = mad,
`2.5% CrI` = q2.5,
`97.5% CrI` = q97.5,
`R̂` = rhat,
`Bulk ESS` = ess_bulk,
`Tail ESS` = ess_tail)
# # for reporting BULK_ESS
# S1.full.coef.table <- summarise_draws(as_draws_df(S1.full.bm)) %>%
#   filter(grepl("^b_", variable)) %>%
#   mutate(variable = gsub("b_", "", variable)) %>%
#   mutate(variable = gsub("condition", "", variable)) %>%
#   mutate(variable = gsub("([^ ])([A-Z])", "\\1 \\2", variable)) %>%
#   mutate(variable = gsub(":", " × ", variable)) %>%
#   mutate(variable = gsub("z.age", "Age*", variable)) %>%
#   mutate(variable = gsub("z.trial", "Trial*", variable)) %>%
#   mutate(variable = gsub("sex1", "Sex (Male)", variable))
S1.full.coef.table.fin <- S1.full.coef.table %>%
filter(grepl("^b_", variable)) %>%
mutate(variable = gsub("b_", "", variable)) %>%
mutate(variable = gsub("condition", "", variable)) %>%
mutate(variable = gsub("([^ ])([A-Z])", "\\1 \\2", variable)) %>%
mutate(variable = gsub(":", " × ", variable)) %>%
mutate(variable = gsub("z.age", "Age*", variable)) %>%
mutate(variable = gsub("z.trial", "Trial*", variable)) %>%
mutate(variable = gsub("sex1", "Sex (Male)", variable)) %>%
select(variable, mean, sd, mad, q2.5, q97.5, ess_bulk, ess_tail) %>%
rename(
Predictor = variable,
Estimate = mean,
SD = sd,
MAD = mad,
`2.5% CrI` = q2.5,
`97.5% CrI` = q97.5,
# `R̂` = rhat,
`Bulk ESS` = ess_bulk,
`Tail ESS` = ess_tail)
ft <- flextable(S1.full.coef.table.fin %>% select(-median)) %>%
theme_apa() %>%
set_caption("Study 1: Posterior Estimates From Full Model") %>%
fontsize(size = 8, part = "all") %>%
set_table_properties(layout = "autofit") %>%
add_footer_lines(values = "Note. Estimates represent posterior means with 90% equal-tailed credible intervals (CrIs). MAD indicates Median Absolute Deviation. R̂ values omitted as they are all ~1 indicating convergence. ESS refers to effective sample size. * Indicates variables were standardized.") %>%
autofit()
S1.full.coef.table.fin <- S1.full.coef.table %>%
filter(grepl("^b_", variable)) %>%
mutate(variable = gsub("b_", "", variable)) %>%
mutate(variable = gsub("condition", "", variable)) %>%
mutate(variable = gsub("([^ ])([A-Z])", "\\1 \\2", variable)) %>%
mutate(variable = gsub(":", " × ", variable)) %>%
mutate(variable = gsub("z.age", "Age*", variable)) %>%
mutate(variable = gsub("z.trial", "Trial*", variable)) %>%
mutate(variable = gsub("sex1", "Sex (Male)", variable)) %>%
select(variable, mean, sd, mad, q2.5, q97.5, ess_bulk, ess_tail) %>%
rename(
Predictor = variable,
Estimate = mean,
SD = sd,
MAD = mad,
`2.5% CrI` = q2.5,
`97.5% CrI` = q97.5,
# `R̂` = rhat,
`Bulk ESS` = ess_bulk,
`Tail ESS` = ess_tail)
ft <- flextable(S1.full.coef.table.fin) %>%
theme_apa() %>%
set_caption("Study 1: Posterior Estimates From Full Model") %>%
fontsize(size = 8, part = "all") %>%
set_table_properties(layout = "autofit") %>%
add_footer_lines(values = "Note. Estimates represent posterior means with 90% equal-tailed credible intervals (CrIs). MAD indicates Median Absolute Deviation. R̂ values omitted as they are all ~1 indicating convergence. ESS refers to effective sample size. * Indicates variables were standardized.") %>%
autofit()
ft
# # for reporting BULK_ESS
# S1.full.coef.table <- summarise_draws(as_draws_df(S1.full.bm)) %>%
#   filter(grepl("^b_", variable)) %>%
#   mutate(variable = gsub("b_", "", variable)) %>%
#   mutate(variable = gsub("condition", "", variable)) %>%
#   mutate(variable = gsub("([^ ])([A-Z])", "\\1 \\2", variable)) %>%
#   mutate(variable = gsub(":", " × ", variable)) %>%
#   mutate(variable = gsub("z.age", "Age*", variable)) %>%
#   mutate(variable = gsub("z.trial", "Trial*", variable)) %>%
#   mutate(variable = gsub("sex1", "Sex (Male)", variable))
S1.full.coef.table.fin <- S1.full.coef.table %>%
filter(grepl("^b_", variable)) %>%
mutate(variable = gsub("b_", "", variable)) %>%
mutate(variable = gsub("condition", "", variable)) %>%
mutate(variable = gsub("([^ ])([A-Z])", "\\1 \\2", variable)) %>%
mutate(variable = gsub(":", " × ", variable)) %>%
mutate(variable = gsub("z.age", "Age*", variable)) %>%
mutate(variable = gsub("z.trial", "Trial*", variable)) %>%
mutate(variable = gsub("sex1", "Sex (Male)", variable)) %>%
select(variable, mean, sd, mad, q2.5, q97.5, ess_bulk, ess_tail) %>%
rename(
Predictor = variable,
Estimate = mean,
SD = sd,
MAD = mad,
`2.5% CrI` = q2.5,
`97.5% CrI` = q97.5,
# `R̂` = rhat,
`Bulk ESS` = ess_bulk,
`Tail ESS` = ess_tail)
ft <- flextable(S1.full.coef.table.fin) %>%
theme_apa() %>%
set_caption("Study 1: Posterior Estimates From Full Model") %>%
fontsize(size = 8, part = "all") %>%
fontsize(part = "footer", size = 6) %>%
set_table_properties(layout = "autofit") %>%
add_footer_lines(values = "Note. Estimates represent posterior means with 90% equal-tailed credible intervals (CrIs). MAD indicates Median Absolute Deviation. R̂ values omitted as they are all ~1 indicating convergence. ESS refers to effective sample size. * Indicates variables were standardized.") %>%
autofit()
ft
# # for reporting BULK_ESS
# S1.full.coef.table <- summarise_draws(as_draws_df(S1.full.bm)) %>%
#   filter(grepl("^b_", variable)) %>%
#   mutate(variable = gsub("b_", "", variable)) %>%
#   mutate(variable = gsub("condition", "", variable)) %>%
#   mutate(variable = gsub("([^ ])([A-Z])", "\\1 \\2", variable)) %>%
#   mutate(variable = gsub(":", " × ", variable)) %>%
#   mutate(variable = gsub("z.age", "Age*", variable)) %>%
#   mutate(variable = gsub("z.trial", "Trial*", variable)) %>%
#   mutate(variable = gsub("sex1", "Sex (Male)", variable))
S1.full.coef.table.fin <- S1.full.coef.table %>%
filter(grepl("^b_", variable)) %>%
mutate(variable = gsub("b_", "", variable)) %>%
mutate(variable = gsub("condition", "", variable)) %>%
mutate(variable = gsub("([^ ])([A-Z])", "\\1 \\2", variable)) %>%
mutate(variable = gsub(":", " × ", variable)) %>%
mutate(variable = gsub("z.age", "Age*", variable)) %>%
mutate(variable = gsub("z.trial", "Trial*", variable)) %>%
mutate(variable = gsub("sex1", "Sex (Male)", variable)) %>%
select(variable, mean, sd, mad, q2.5, q97.5, ess_bulk, ess_tail) %>%
rename(
Predictor = variable,
Estimate = mean,
SD = sd,
MAD = mad,
`2.5% CrI` = q2.5,
`97.5% CrI` = q97.5,
# `R̂` = rhat,
`Bulk ESS` = ess_bulk,
`Tail ESS` = ess_tail)
ft <- flextable(S1.full.coef.table.fin) %>%
theme_apa() %>%
set_caption("Study 1: Posterior Estimates From Full Model") %>%
fontsize(size = 8, part = "all") %>%
fontsize(part = "footer", size = 4) %>%
set_table_properties(layout = "autofit") %>%
add_footer_lines(values = "Note. Estimates represent posterior means with 90% equal-tailed credible intervals (CrIs). MAD indicates Median Absolute Deviation. R̂ values omitted as they are all ~1 indicating convergence. ESS refers to effective sample size. * = variables were standardized.") %>%
autofit()
ft
ft <- flextable(S1.full.coef.table.fin) %>%
theme_apa() %>%
set_caption("Study 1: Posterior Estimates From Full Model") %>%
fontsize(size = 8, part = "all") %>%
fontsize(part = "footer", size = 4) %>%
set_table_properties(layout = "autofit") %>%
add_footer_lines(values = "Note. Estimates represent posterior means with 90% equal-tailed credible intervals (CrIs). MAD indicates Median Absolute Deviation. R̂ values omitted as they are all ~1 indicating convergence. ESS refers to effective sample size. * = variables were standardized.") %>%
autofit()
ft
ft <- flextable(S1.full.coef.table.fin) %>%
theme_apa() %>%
set_caption("Study 1: Posterior Estimates From Full Model") %>%
fontsize(size = 8, part = "all") %>%
set_table_properties(layout = "autofit") %>%
add_footer_lines(values = "Note. Estimates represent posterior means with 90% equal-tailed credible intervals (CrIs). MAD indicates Median Absolute Deviation. R̂ values omitted as they are all ~1 indicating convergence. ESS refers to effective sample size. * = variables were standardized.") %>%
fontsize(part = "footer", size = 6) %>%  # ← move this here
autofit()
ft
ft <- flextable(S1.full.coef.table.fin) %>%
theme_apa() %>%
set_caption("Study 1: Posterior Estimates From Full Model") %>%
fontsize(size = 8, part = "all") %>%
set_table_properties(layout = "autofit") %>%
add_footer_lines(values = "Note. Estimates represent posterior means with 90% equal-tailed credible intervals (CrIs). MAD indicates Median Absolute Deviation. R̂ values omitted as they are all ~1 indicating convergence. ESS refers to effective sample size. * = variables were standardized.") %>%
fontsize(part = "footer", size = 8) %>%  # ← move this here
autofit()
ft
ft <- flextable(S1.full.coef.table.fin) %>%
theme_apa() %>%
set_caption("Study 1: Posterior Estimates From Full Model") %>%
fontsize(size = 8, part = "all") %>%
set_table_properties(layout = "autofit") %>%
add_footer_lines(values = "Note. Estimates represent posterior means with 95% equal-tailed credible intervals (CrIs). MAD indicates Median Absolute Deviation. ESS refers to effective sample size. R̂ values omitted as they are all ~1 indicating convergence.  * = variables were standardized.") %>%
fontsize(part = "footer", size = 8) %>%
autofit()
ft
library("papaja")
r_refs("library.bib")
# NOTE; how to push title, authornotes and abstract
# note: "\\clearpage"
# Loading packages
# NOTE: this will install these packages in case they are missing
# General
if (!require(tidyverse)) install.packages('tidyverse'); library(tidyverse)
if (!require(lsr)) install.packages('lsr'); library(lsr) # Analysis, Cohen's D
if (!require(ggthemes)) install.packages('ggthemes'); library(ggthemes) # for tufte boxplots
# if (!require(kableExtra)) install.packages('kableExtra'); library(kableExtra)
library(cowplot)
library(magick)
# Styling library(flextable)
if (!require(flextable)) install.packages('flextable'); library(flextable)
# bayes packages
if (!require(brms)) install.packages('brms'); library(brms) #
if (!require(tidybayes)) install.packages('tidybayes'); library(tidybayes) #
if (!require(HDInterval)) install.packages('HDInterval'); library(HDInterval) #
if (!require(posterior)) install.packages('posterior'); library(posterior) #
# basic analyses
if (!require(scales)) install.packages('scales'); library(scales) #
# plotting
## ggplot via tidyverse
if (!require(cowplot)) install.packages('cowplot'); library(cowplot) #
if (!require(png)) install.packages('png'); library(png) #
if (!require(grid)) install.packages('grid'); library(grid) #
# Troubleshooting Knitting Document
# might be required for knitting manuscript
# install.packages('tinytex')
# tinytex::install_tinytex()
#
# tinytex::tlmgr_update()
# tinytex::reinstall_tinytex()
# Seed for random number generation
set.seed(42)
knitr::opts_chunk$set(cache.extra = knitr::rand_seed)
knitr::include_graphics(knitr::plot_crop("../illustrations/plot_study1.png"))
knitr::include_graphics(knitr::plot_crop("../illustrations/plot_study3.png"))
knitr::include_graphics(knitr::plot_crop("../illustrations/plot_study2.png"))
